{"version":3,"sources":["../../src/Table/index.js"],"names":["DEFAULT_TH_PADDING","pTop","pRight","pBottom","pLeft","DEFAULT_TD_PADDING","MtTable","styled","div","theme","colors","DARK_OUTER_SPACE","mixins","smallDarkLink","ALTO","props","contentCellPadding","darkText","PEARL","showMultiSelect","OUTER_SPACE","PORCELAIN","TROPICAL_BLUE","INDIGO","Table","state","showActionBar","selectAll","selectedRowKeys","scrollElement","styleProps","headerCellPadding","tableRef","fetch","loading","fetchData","onScroll","hasMore","threshold","infiniteScroll","windowScroll","scroll","body","document","html","documentElement","height","Math","max","scrollHeight","offsetHeight","clientHeight","innerHeight","window","scrollY","y","scrollTop","removeEventListener","onChange","selectedRows","dataSource","actionBar","rowSelection","setState","length","getElementsByClassName","addEventListener","map","v","key","children","updatedRowSelection","antProps","ele","actionItem","Component","propTypes","PropTypes","node","shape","countText","string","isRequired","arrayOf","func","object","columns","array","size","bool","number","defaultProps","Column","AntTable"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport AntTable from 'antd/lib/table';\nimport 'antd/lib/table/style/index.css';\nimport 'antd/lib/checkbox/style/index.css';\nimport styled from 'styled-components';\nimport theme from '../styles/theme';\nimport mixins from '../styles/mixins.js';\nimport ActionBar from '../ActionBar';\n\nconst DEFAULT_TH_PADDING = {\n  pTop: '16px',\n  pRight: '0',\n  pBottom: '16px',\n  pLeft: '32px'\n};\n\nconst DEFAULT_TD_PADDING = {\n  pTop: '12px',\n  pRight: '0',\n  pBottom: '12px',\n  pLeft: '32px'\n};\n\nconst MtTable = styled.div`\n  counter-reset: rowNumber;\n  .ant-table-default > .ant-table-content > .ant-table-body > table,\n  .ant-table-middle > .ant-table-content > .ant-table-body > table,\n  .ant-table-small > .ant-table-content > .ant-table-body > table,\n  .ant-table-default\n    > .ant-table-content\n    > .ant-table-scroll\n    > .ant-table-header\n    > .ant-table-fixed,\n  .ant-table-default\n    > .ant-table-content\n    > .ant-table-scroll\n    > .ant-table-body\n    > .ant-table-fixed,\n  .ant-table-default\n    > .ant-table-content\n    > .ant-table-fixed-left\n    > .ant-table-header\n    > .ant-table-fixed,\n  .ant-table-default\n    > .ant-table-content\n    > .ant-table-fixed-left\n    > .ant-table-body-outer\n    > .ant-table-body-inner\n    > .ant-table-fixed,\n  .ant-table-default\n    > .ant-table-content\n    > .ant-table-fixed-right\n    > .ant-table-header\n    > .ant-table-fixed,\n  .ant-table-default\n    > .ant-table-content\n    > .ant-table-fixed-right\n    > .ant-table-body-outer\n    > .ant-table-body-inner\n    > .ant-table-fixed {\n    padding: 0px;\n    .ant-table-thead {\n      & > tr {\n        color: ${theme.colors.DARK_OUTER_SPACE};\n        & > th {\n          ${mixins.smallDarkLink()};\n          background-color: white;\n          border-bottom: 1px solid ${theme.colors.ALTO};\n          padding: ${props => {\n            let {\n              contentCellPadding: {\n                pTop,\n                pRight,\n                pBottom,\n                pLeft\n              } = DEFAULT_TH_PADDING\n            } = props;\n            return `${pTop} ${pRight} ${pBottom}  ${pLeft}`;\n          }};\n          &:last-child {\n            padding: ${props => {\n              let {\n                contentCellPadding: {\n                  pTop,\n                  pBottom,\n                  pLeft\n                } = DEFAULT_TH_PADDING\n              } = props;\n              return `${pTop} ${pLeft} ${pBottom}  ${pLeft}`;\n            }};\n          }\n        }\n      }\n    }\n    .ant-table-tbody {\n      & > tr {\n        color: ${theme.colors.DARK_OUTER_SPACE};\n        & > td {\n          ${mixins.darkText()};\n          background-color: white;\n          border-bottom: 1px solid ${theme.colors.PEARL};\n          padding: ${props => {\n            let {\n              contentCellPadding: {\n                pTop,\n                pRight,\n                pBottom,\n                pLeft\n              } = DEFAULT_TD_PADDING\n            } = props;\n            return `${pTop} ${pRight} ${pBottom} ${pLeft}`;\n          }};\n          &:last-child {\n            padding: ${props => {\n              let {\n                contentCellPadding: {\n                  pTop,\n                  pBottom,\n                  pLeft\n                } = DEFAULT_TD_PADDING\n              } = props;\n              return `${pTop} ${pLeft} ${pBottom} ${pLeft}`;\n            }};\n          }\n        }\n      }\n    }\n\n    .ant-table-row {\n      counter-increment: rowNumber;\n      &:hover {\n        .ant-table-selection-column {\n          ${props =>\n            !props.showMultiSelect &&\n            `&:before {\n            visibility: hidden;\n          }\n          & > span {\n            visibility: visible;\n          }`};\n        }\n      }\n    }\n\n    .ant-table-tbody {\n      counter-reset: rowNumber;\n      .ant-table-selection-column {\n        ${props =>\n          !props.showMultiSelect &&\n          `&:before {\n          content: counter(rowNumber);\n          margin-left: 5px;\n          position: absolute;\n          color: ${theme.colors.OUTER_SPACE};\n          font-size: 12px;\n        }\n        & > span {\n          visibility: hidden;\n        }`};\n      }\n      & > tr {\n        color: ${theme.colors.DARK_OUTER_SPACE};\n        &:focus-within {\n          & > td {\n            background: ${theme.colors.PORCELAIN};\n            cursor: pointer;\n          }\n        }\n        td {\n          ${mixins.darkText()};\n          border-bottom: 1px solid ${theme.colors.PEARL};\n          padding: ${props => {\n            let {\n              contentCellPadding: {\n                pTop,\n                pRight,\n                pBottom,\n                pLeft\n              } = DEFAULT_TD_PADDING\n            } = props;\n            return `${pTop} ${pRight} ${pBottom} ${pLeft}`;\n          }};\n          &:last-child {\n            padding: ${props => {\n              let {\n                contentCellPadding: {\n                  pTop,\n                  pBottom,\n                  pLeft\n                } = DEFAULT_TD_PADDING\n              } = props;\n              return `${pTop} ${pLeft} ${pBottom} ${pLeft}`;\n            }};\n          }\n        }\n        &.ant-table-row-selected {\n          & > td {\n            background: ${theme.colors.TROPICAL_BLUE};\n            cursor: pointer;\n          }\n          &:hover {\n            & > td {\n              background: ${theme.colors.TROPICAL_BLUE};\n              cursor: pointer;\n            }\n          }\n        }\n        &.ant-table-row-hover {\n          & > td {\n            background: ${theme.colors.PORCELAIN};\n            cursor: pointer;\n          }\n          &:hover {\n            & > td {\n              background: ${theme.colors.PORCELAIN};\n              cursor: pointer;\n            }\n          }\n        }\n        &:hover {\n          & > td {\n            background: ${theme.colors.PORCELAIN};\n            cursor: pointer;\n          }\n        }\n      }\n    }\n  }\n\n  .ant-table-thead > tr > th.ant-table-selection-column,\n  .ant-table-tbody > tr > td.ant-table-selection-column {\n    min-width: auto;\n    width: auto;\n  }\n\n  .ant-checkbox-wrapper {\n    & .ant-checkbox > .ant-checkbox-inner {\n      width: 14px;\n      height: 14px;\n      border-radius: 3px;\n      &:after {\n        left: 3.5px;\n        top: 1.2px;\n      }\n    }\n    & > .ant-checkbox-checked {\n      & > .ant-checkbox-inner {\n        background-color: ${theme.colors.INDIGO};\n        border-color: ${theme.colors.INDIGO};\n        &:after {\n          left: 3.5px;\n          top: 1.2px;\n        }\n      }\n    }\n    & > .ant-checkbox-indeterminate {\n      & > .ant-checkbox-inner {\n        background-color: ${theme.colors.INDIGO};\n        border-color: ${theme.colors.INDIGO};\n        &:after {\n          left: 1.5px;\n          top: 5px;\n        }\n      }\n    }\n  }\n`;\n\nclass Table extends Component {\n  static propTypes = {\n    children: PropTypes.node,\n    actionBar: PropTypes.shape({\n      countText: PropTypes.string.isRequired,\n      actionItem: PropTypes.arrayOf(PropTypes.node)\n    }),\n    onChange: PropTypes.func,\n    rowSelection: PropTypes.object,\n    columns: PropTypes.array,\n    size: PropTypes.string,\n    headerCellPadding: PropTypes.shape({\n      pTop: PropTypes.string,\n      pRight: PropTypes.string,\n      pBottom: PropTypes.string,\n      pLeft: PropTypes.string\n    }),\n    contentCellPadding: PropTypes.shape({\n      pTop: PropTypes.string,\n      pRight: PropTypes.string,\n      pBottom: PropTypes.string,\n      pLeft: PropTypes.string\n    }),\n    fetchData: PropTypes.func,\n    infiniteScroll: PropTypes.bool,\n    threshold: PropTypes.number,\n    windowScroll: PropTypes.bool,\n    hasMore: PropTypes.bool,\n    loading: PropTypes.bool,\n    scroll: PropTypes.object,\n    dataSource: PropTypes.array\n  };\n  static defaultProps = {\n    infiniteScroll: false,\n    threshold: 0.9,\n    windowScroll: false\n  };\n  state = {\n    showActionBar: false,\n    showMultiSelect: false,\n    selectAll: false,\n    selectedRowKeys: []\n  };\n  scrollElement = null;\n  styleProps = {\n    contentCellPadding: this.props.contentCellPadding,\n    headerCellPadding: this.props.headerCellPadding\n  };\n  tableRef = null;\n  fetch = () => {\n    const { loading, fetchData } = this.props;\n    if (!loading && fetchData) {\n      fetchData();\n    }\n  };\n  onScroll = () => {\n    const {\n      hasMore,\n      threshold,\n      infiniteScroll,\n      windowScroll,\n      scroll\n    } = this.props;\n    const body = document.body,\n      html = document.documentElement;\n    const height = windowScroll\n      ? Math.max(\n          body.scrollHeight,\n          body.offsetHeight,\n          html.clientHeight,\n          html.scrollHeight,\n          html.offsetHeight\n        )\n      : Math.max(\n          this.scrollElement.scrollHeight,\n          this.scrollElement.clientHeight\n        );\n\n    const innerHeight = windowScroll\n      ? window.innerHeight + window.scrollY\n      : scroll.y + this.scrollElement.scrollTop;\n\n    if (innerHeight >= height * threshold) {\n      if (infiniteScroll && hasMore) {\n        this.fetch();\n      } else {\n        window.removeEventListener('scroll', this.onScroll, false);\n      }\n    }\n  };\n  componentDidMount() {\n    const { infiniteScroll, windowScroll } = this.props;\n    if (infiniteScroll && this.tableRef) {\n      this.scrollElement = windowScroll\n        ? window\n        : this.tableRef.getElementsByClassName('ant-table-body')[0];\n      if (this.scrollElement) {\n        this.scrollElement.addEventListener('scroll', this.onScroll, false);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    const { infiniteScroll } = this.props;\n    if (infiniteScroll && this.scrollElement) {\n      this.scrollElement.removeEventListener('scroll', this.onScroll, false);\n    }\n  }\n  componentWillReceiveProps() {\n    const { dataSource } = this.props;\n    const { selectAll, selectedRowKeys } = this.state;\n    if (selectAll && dataSource.length > selectedRowKeys.length) {\n      this.onChange(dataSource.map(v => v.key), dataSource);\n    }\n  }\n  onChange = (selectedRowKeys, selectedRows) => {\n    let {\n      dataSource,\n      actionBar,\n      rowSelection: { onChange }\n    } = this.props;\n    this.setState(() => ({\n      showActionBar: actionBar && selectedRowKeys.length > 0,\n      showMultiSelect: selectedRowKeys.length > 0,\n      selectedRowKeys: selectedRowKeys,\n      selectAll: dataSource.length === selectedRowKeys.length\n    }));\n    onChange && onChange(selectedRowKeys, selectedRows);\n  };\n\n  render() {\n    let { rowSelection, actionBar, children } = this.props;\n    let { showActionBar, showMultiSelect, selectedRowKeys } = this.state;\n\n    /**\n     * Check if rowSelection props is been passed, If yes override the onChange property of it.\n     * Also if onChange prop is passed and the rowSelection is not available, create a new rowSelection object with onChange method.\n     */\n    const updatedRowSelection = rowSelection\n      ? {\n          ...rowSelection,\n          onChange: this.onChange,\n          selectedRowKeys\n        }\n      : null;\n\n    const antProps = updatedRowSelection\n      ? {\n          ...this.props,\n          rowSelection: updatedRowSelection\n        }\n      : {\n          ...this.props\n        };\n    return (\n      <MtTable\n        innerRef={ele => (this.tableRef = ele)}\n        showMultiSelect={showMultiSelect}\n        {...this.styleProps}\n      >\n        <AntTable {...antProps}>{children}</AntTable>\n        {showActionBar && (\n          <ActionBar {...actionBar}>\n            {actionBar ? actionBar.actionItem : false}\n          </ActionBar>\n        )}\n      </MtTable>\n    );\n  }\n}\nTable.Column = AntTable.Column;\nexport default Table;\n"]}