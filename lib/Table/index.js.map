{"version":3,"sources":["../../src/Table/index.js"],"names":["MtTable","styled","div","theme","colors","DARK_OUTER_SPACE","props","showMultiSelect","OUTER_SPACE","PEARL","PORCELAIN","Table","state","showActionBar","onChange","selectedRowKeys","selectedRows","actionBar","setState","length","rowSelection","children","updatedRowSelection","antProps","actionItem","Component","propTypes","PropTypes","node","shape","countText","string","isRequired","arrayOf","func","object"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,UAAUC,2BAAOC,GAAjB,kBAQSC,gBAAMC,MAAN,CAAaC,gBARtB,EAmBI;AAAA,SACA,CAACC,MAAMC,eAAP,yHADA;AAAA,CAnBJ,EAgCE;AAAA,SACA,CAACD,MAAMC,eAAP,kIAKSJ,gBAAMC,MAAN,CAAaI,WALtB,iGADA;AAAA,CAhCF,EA8CSL,gBAAMC,MAAN,CAAaC,gBA9CtB,EAgD6BF,gBAAMC,MAAN,CAAaK,KAhD1C,EA+DkBN,gBAAMC,MAAN,CAAaM,SA/D/B,CAAN;;IAuEMC,K;;;;;;;;;;;;;;0MAUJC,K,GAAQ;AACNC,qBAAe,KADT;AAENN,uBAAiB;AAFX,K,QAKRO,Q,GAAW,UAACC,eAAD,EAAkBC,YAAlB,EAAmC;AAAA,wBACd,MAAKV,KADS;AAAA,UACtCW,SADsC,eACtCA,SADsC;AAAA,UAC3BH,QAD2B,eAC3BA,QAD2B;;AAE5C,YAAKI,QAAL,CAAc;AAAA,eAAO;AACnBL,yBAAeI,aAAaD,aAAaG,MAAb,GAAsB,CAD/B;AAEnBZ,2BAAiBU,aAAaD,aAAaG,MAAb,GAAsB;AAFjC,SAAP;AAAA,OAAd;AAIAL,kBAAYA,SAASC,eAAT,EAA0BC,YAA1B,CAAZ;AACD,K;;;;;6BAEQ;AAAA,mBAC+C,KAAKV,KADpD;AAAA,UACDc,YADC,UACDA,YADC;AAAA,UACaH,SADb,UACaA,SADb;AAAA,UACwBH,QADxB,UACwBA,QADxB;AAAA,UACkCO,QADlC,UACkCA,QADlC;AAAA,mBAEkC,KAAKT,KAFvC;AAAA,UAEDC,aAFC,UAEDA,aAFC;AAAA,UAEcN,eAFd,UAEcA,eAFd;AAGP;;;;;AAIA,UAAMe,sBAAsBF,0CACnBA,YADmB,IACLN,UAAU,KAAKA,QADV,MAExBA,WACE,EAAEA,UAAU,KAAKA,QAAjB,EADF,GAEE,IAJN;AAKA,UAAMS,WAAWD,iDAER,KAAKhB,KAFG;AAGXc,sBAAcE;AAHH,sCAKR,KAAKhB,KALG,CAAjB;AAMA,aACE;AAAC,eAAD;AAAA,UAAS,iBAAiBC,eAA1B;AACE;AAAC,yBAAD;AAAcgB,kBAAd;AAAyBF;AAAzB,SADF;AAEGR,yBACC;AAAC,6BAAD;AAAeI,mBAAf;AACGA,sBAAYA,UAAUO,UAAtB,GAAmC;AADtC;AAHJ,OADF;AAUD;;;EApDiBC,gB;;AAAdd,K,CACGe,S,GAAY;AACjBL,YAAUM,oBAAUC,IADH;AAEjBX,aAAWU,oBAAUE,KAAV,CAAgB;AACzBC,eAAWH,oBAAUI,MAAV,CAAiBC,UADH;AAEzBR,gBAAYG,oBAAUM,OAAV,CAAkBN,oBAAUC,IAA5B;AAFa,GAAhB,CAFM;AAMjBd,YAAUa,oBAAUO,IANH;AAOjBd,gBAAcO,oBAAUQ;AAPP,C;kBAqDNxB,K","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport AntTable from 'antd/lib/table';\nimport 'antd/lib/table/style/index.css';\nimport styled from 'styled-components';\nimport theme from '../styles/theme';\nimport ActionBar from '../ActionBar';\n\nconst MtTable = styled.div`\n  border-radius: 8px;\n  background-color: #ffffff;\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.08);\n  padding: 15px 8px;\n  counter-reset: rowNumber;\n  .ant-table-thead {\n    & > tr {\n      color: ${theme.colors.DARK_OUTER_SPACE};\n      & > th {\n        background-color: white;\n        border-bottom: 0px;\n      }\n    }\n  }\n  .ant-table-row {\n    counter-increment: rowNumber;\n    &:hover {\n      .ant-table-selection-column {\n        ${props =>\n          !props.showMultiSelect &&\n          `&:before {\n          visibility: hidden;\n        }\n        & > span {\n          visibility: visible;\n        }`};\n      }\n    }\n  }\n  .ant-table-tbody {\n    .ant-table-selection-column {\n      ${props =>\n        !props.showMultiSelect &&\n        `&:before {\n        content: counter(rowNumber);\n        margin-left: 5px;\n        position: absolute;\n        color: ${theme.colors.OUTER_SPACE};\n        font-size: 12px;\n      }\n      & > span {\n        visibility: hidden;\n      }`};\n    }\n    & > tr {\n      color: ${theme.colors.DARK_OUTER_SPACE};\n      td {\n        border-bottom: 1px solid ${theme.colors.PEARL};\n        padding: 16px !important;\n      }\n      &:last-child {\n        td {\n          border-bottom: 0px;\n        }\n      }\n    }\n  }\n\n  .ant-table-tbody {\n    & > tr {\n      &:hover {\n        & > td {\n          background: ${theme.colors.PORCELAIN};\n          cursor: pointer;\n        }\n      }\n    }\n  }\n`;\n\nclass Table extends Component {\n  static propTypes = {\n    children: PropTypes.node,\n    actionBar: PropTypes.shape({\n      countText: PropTypes.string.isRequired,\n      actionItem: PropTypes.arrayOf(PropTypes.node)\n    }),\n    onChange: PropTypes.func,\n    rowSelection: PropTypes.object\n  };\n  state = {\n    showActionBar: false,\n    showMultiSelect: false\n  };\n\n  onChange = (selectedRowKeys, selectedRows) => {\n    let { actionBar, onChange } = this.props;\n    this.setState(() => ({\n      showActionBar: actionBar && selectedRows.length > 0,\n      showMultiSelect: actionBar && selectedRows.length > 0\n    }));\n    onChange && onChange(selectedRowKeys, selectedRows);\n  };\n\n  render() {\n    let { rowSelection, actionBar, onChange, children } = this.props;\n    let { showActionBar, showMultiSelect } = this.state;\n    /**\n     * Check if rowSelection props is been passed, If yes override the onChange property of it.\n     * Also if onChange prop is passed and the rowSelection is not available, create a new rowSelection object with onChange method.\n     */\n    const updatedRowSelection = rowSelection\n      ? { ...rowSelection, onChange: this.onChange }\n      : onChange\n        ? { onChange: this.onChange }\n        : null;\n    const antProps = updatedRowSelection\n      ? {\n          ...this.props,\n          rowSelection: updatedRowSelection\n        }\n      : { ...this.props };\n    return (\n      <MtTable showMultiSelect={showMultiSelect}>\n        <AntTable {...antProps}>{children}</AntTable>\n        {showActionBar && (\n          <ActionBar {...actionBar}>\n            {actionBar ? actionBar.actionItem : false}\n          </ActionBar>\n        )}\n      </MtTable>\n    );\n  }\n}\nexport default Table;\n"]}