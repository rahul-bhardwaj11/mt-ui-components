{"version":3,"sources":["../../src/Table/index.js"],"names":["DEFAULT_LOADER_PROPS","type","size","style","opacity","DEFAULT_TH_PADDING","pTop","pRight","pBottom","pLeft","DEFAULT_TD_PADDING","MtTable","colors","DARK_OUTER_SPACE","smallDarkLink","ALTO","props","headerCellPadding","darkText","PEARL","contentCellPadding","showMultiSelect","OUTER_SPACE","PORCELAIN","TROPICAL_BLUE","INDIGO","Table","state","showActionBar","selectAll","selectedRowKeys","scrollElement","styleProps","tableRef","fetch","loading","fetchData","onScroll","hasMore","threshold","infiniteScroll","windowScroll","scroll","body","document","html","documentElement","height","Math","max","scrollHeight","offsetHeight","clientHeight","innerHeight","window","scrollY","y","scrollTop","removeEventListener","onChange","selectedRows","dataSource","actionBar","rowSelection","setState","length","getLoader","loaderProps","padding","getElementsByClassName","addEventListener","map","v","key","children","updatedRowSelection","antProps","ele","actionItem","propTypes","node","shape","countText","string","isRequired","arrayOf","func","object","columns","array","bool","number","defaultProps","Column"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport AntTable from 'antd/lib/table';\nimport 'antd/lib/table/style/index.css';\nimport 'antd/lib/checkbox/style/index.css';\nimport styled from 'styled-components';\nimport theme from '../styles/theme';\nimport mixins from '../styles/mixins.js';\nimport ActionBar from '../ActionBar';\nimport Loader from '../Loader';\n\nconst DEFAULT_LOADER_PROPS = {\n  type: 'Full',\n  size: 'sizeSmall',\n  style: { opacity: 0.5 }\n};\n\nconst DEFAULT_TH_PADDING = {\n  pTop: '16px',\n  pRight: '0',\n  pBottom: '16px',\n  pLeft: '32px'\n};\n\nconst DEFAULT_TD_PADDING = {\n  pTop: '12px',\n  pRight: '0',\n  pBottom: '12px',\n  pLeft: '32px'\n};\n\nconst MtTable = styled.div`\n  counter-reset: rowNumber;\n  .ant-table-default > .ant-table-content > .ant-table-body > table,\n  .ant-table-middle > .ant-table-content > .ant-table-body > table,\n  .ant-table-small > .ant-table-content > .ant-table-body > table,\n  .ant-table-default\n    > .ant-table-content\n    > .ant-table-scroll\n    > .ant-table-header\n    > .ant-table-fixed,\n  .ant-table-default\n    > .ant-table-content\n    > .ant-table-scroll\n    > .ant-table-body\n    > .ant-table-fixed,\n  .ant-table-default > .ant-table-content > .ant-table-scroll > .ant-table-body,\n  .ant-table-default\n    > .ant-table-content\n    > .ant-table-scroll\n    > .ant-table-header,\n  .ant-table-default\n    > .ant-table-content\n    > .ant-table-fixed-left\n    > .ant-table-header\n    > .ant-table-fixed,\n  .ant-table-default\n    > .ant-table-content\n    > .ant-table-fixed-left\n    > .ant-table-body-outer\n    > .ant-table-body-inner\n    > .ant-table-fixed,\n  .ant-table-default\n    > .ant-table-content\n    > .ant-table-fixed-right\n    > .ant-table-header\n    > .ant-table-fixed,\n  .ant-table-default\n    > .ant-table-content\n    > .ant-table-fixed-right\n    > .ant-table-body-outer\n    > .ant-table-body-inner\n    > .ant-table-fixed {\n    .ant-table-thead {\n      & > tr {\n        color: ${theme.colors.DARK_OUTER_SPACE};\n        & > th {\n          ${mixins.smallDarkLink()};\n          background-color: white;\n          border-bottom: 1px solid ${theme.colors.ALTO};\n          padding: ${props => {\n            let {\n              headerCellPadding: {\n                pTop,\n                pRight,\n                pBottom,\n                pLeft\n              } = DEFAULT_TH_PADDING\n            } = props;\n            return `${pTop} ${pRight} ${pBottom}  ${pLeft}`;\n          }};\n          &:last-child {\n            padding: ${props => {\n              let {\n                headerCellPadding: { pTop, pBottom, pLeft } = DEFAULT_TH_PADDING\n              } = props;\n              return `${pTop} ${pLeft} ${pBottom}  ${pLeft}`;\n            }};\n          }\n        }\n      }\n    }\n    .ant-table-tbody {\n      & > tr {\n        color: ${theme.colors.DARK_OUTER_SPACE};\n        & > td {\n          ${mixins.darkText()};\n          background-color: white;\n          border-bottom: 1px solid ${theme.colors.PEARL};\n          padding: ${props => {\n            let {\n              contentCellPadding: {\n                pTop,\n                pRight,\n                pBottom,\n                pLeft\n              } = DEFAULT_TD_PADDING\n            } = props;\n            return `${pTop} ${pRight} ${pBottom} ${pLeft}`;\n          }};\n          &:last-child {\n            padding: ${props => {\n              let {\n                contentCellPadding: {\n                  pTop,\n                  pBottom,\n                  pLeft\n                } = DEFAULT_TD_PADDING\n              } = props;\n              return `${pTop} ${pLeft} ${pBottom} ${pLeft}`;\n            }};\n          }\n        }\n      }\n    }\n\n    .ant-table-row {\n      counter-increment: rowNumber;\n      &:hover {\n        .ant-table-selection-column {\n          ${props =>\n            !props.showMultiSelect &&\n            `&:before {\n            visibility: hidden;\n          }\n          & > span {\n            visibility: visible;\n          }`};\n        }\n      }\n    }\n\n    .ant-table-tbody {\n      counter-reset: rowNumber;\n      .ant-table-selection-column {\n        ${props =>\n          !props.showMultiSelect &&\n          `&:before {\n          content: counter(rowNumber);\n          margin-left: 5px;\n          position: absolute;\n          color: ${theme.colors.OUTER_SPACE};\n          font-size: 12px;\n        }\n        & > span {\n          visibility: hidden;\n        }`};\n      }\n      & > tr {\n        color: ${theme.colors.DARK_OUTER_SPACE};\n        &:focus-within {\n          & > td {\n            background: ${theme.colors.PORCELAIN};\n            cursor: pointer;\n          }\n        }\n        td {\n          ${mixins.darkText()};\n          border-bottom: 1px solid ${theme.colors.PEARL};\n          padding: ${props => {\n            let {\n              contentCellPadding: {\n                pTop,\n                pRight,\n                pBottom,\n                pLeft\n              } = DEFAULT_TD_PADDING\n            } = props;\n            return `${pTop} ${pRight} ${pBottom} ${pLeft}`;\n          }};\n          &:last-child {\n            padding: ${props => {\n              let {\n                contentCellPadding: {\n                  pTop,\n                  pBottom,\n                  pLeft\n                } = DEFAULT_TD_PADDING\n              } = props;\n              return `${pTop} ${pLeft} ${pBottom} ${pLeft}`;\n            }};\n          }\n        }\n        &.ant-table-row-selected {\n          & > td {\n            background: ${theme.colors.TROPICAL_BLUE};\n            cursor: pointer;\n          }\n          &:hover {\n            & > td {\n              background: ${theme.colors.TROPICAL_BLUE};\n              cursor: pointer;\n            }\n          }\n        }\n        &.ant-table-row-hover {\n          & > td {\n            background: ${theme.colors.PORCELAIN};\n            cursor: pointer;\n          }\n          &:hover {\n            & > td {\n              background: ${theme.colors.PORCELAIN};\n              cursor: pointer;\n            }\n          }\n        }\n        &:hover {\n          & > td {\n            background: ${theme.colors.PORCELAIN};\n            cursor: pointer;\n          }\n        }\n      }\n    }\n  }\n  .ant-table-thead > tr > th.ant-table-selection-column,\n  .ant-table-tbody > tr > td.ant-table-selection-column {\n    min-width: auto;\n  }\n\n  .ant-checkbox-wrapper {\n    &:hover .ant-checkbox-inner {\n      border-color: ${theme.colors.INDIGO};\n    }\n    & .ant-checkbox > .ant-checkbox-inner {\n      width: 14px;\n      height: 14px;\n      border-radius: 3px;\n      &:after {\n        left: 3px;\n        top: 1px;\n      }\n    }\n    & > .ant-checkbox-checked {\n      & > .ant-checkbox-inner {\n        background-color: ${theme.colors.INDIGO};\n        border-color: ${theme.colors.INDIGO};\n        &:after {\n          left: 3px;\n          top: 1px;\n        }\n      }\n    }\n    & > .ant-checkbox-indeterminate {\n      & > .ant-checkbox-inner {\n        border-color: ${theme.colors.INDIGO};\n        &:after {\n          left: 6px;\n          top: 6px;\n          background-color: ${theme.colors.INDIGO};\n        }\n      }\n    }\n    .ant-checkbox:hover .ant-checkbox-inner,\n    .ant-checkbox-input:focus + .ant-checkbox-inner {\n      border-color: ${theme.colors.INDIGO};\n    }\n  }\n`;\n\nclass Table extends Component {\n  static propTypes = {\n    children: PropTypes.node,\n    actionBar: PropTypes.shape({\n      countText: PropTypes.string.isRequired,\n      actionItem: PropTypes.arrayOf(PropTypes.node)\n    }),\n    onChange: PropTypes.func,\n    rowSelection: PropTypes.object,\n    columns: PropTypes.array,\n    size: PropTypes.string,\n    headerCellPadding: PropTypes.shape({\n      pTop: PropTypes.string,\n      pRight: PropTypes.string,\n      pBottom: PropTypes.string,\n      pLeft: PropTypes.string\n    }),\n    contentCellPadding: PropTypes.shape({\n      pTop: PropTypes.string,\n      pRight: PropTypes.string,\n      pBottom: PropTypes.string,\n      pLeft: PropTypes.string\n    }),\n    fetchData: PropTypes.func,\n    infiniteScroll: PropTypes.bool,\n    threshold: PropTypes.number,\n    windowScroll: PropTypes.bool,\n    hasMore: PropTypes.bool,\n    loading: PropTypes.bool,\n    scroll: PropTypes.object,\n    dataSource: PropTypes.array\n  };\n  static defaultProps = {\n    infiniteScroll: false,\n    threshold: 0.9,\n    windowScroll: false\n  };\n  state = {\n    showActionBar: false,\n    showMultiSelect: false,\n    selectAll: false,\n    selectedRowKeys: []\n  };\n  scrollElement = null;\n  styleProps = {\n    contentCellPadding: this.props.contentCellPadding,\n    headerCellPadding: this.props.headerCellPadding\n  };\n  tableRef = null;\n  fetch = () => {\n    const { loading, fetchData } = this.props;\n    if (!loading && fetchData) {\n      fetchData();\n    }\n  };\n  onScroll = () => {\n    const {\n      hasMore,\n      threshold,\n      infiniteScroll,\n      windowScroll,\n      scroll\n    } = this.props;\n    const body = document.body,\n      html = document.documentElement;\n    const height = windowScroll\n      ? Math.max(\n          body.scrollHeight,\n          body.offsetHeight,\n          html.clientHeight,\n          html.scrollHeight,\n          html.offsetHeight\n        )\n      : Math.max(\n          this.scrollElement.scrollHeight,\n          this.scrollElement.clientHeight\n        );\n\n    const innerHeight = windowScroll\n      ? window.innerHeight + window.scrollY\n      : scroll.y + this.scrollElement.scrollTop;\n\n    if (innerHeight >= height * threshold) {\n      if (infiniteScroll && hasMore) {\n        this.fetch();\n      } else {\n        window.removeEventListener('scroll', this.onScroll, false);\n      }\n    }\n  };\n  componentDidMount() {\n    const { infiniteScroll, windowScroll } = this.props;\n    if (infiniteScroll && this.tableRef) {\n      this.scrollElement = windowScroll\n        ? window\n        : this.tableRef.getElementsByClassName('ant-table-body')[0];\n      if (this.scrollElement) {\n        this.scrollElement.addEventListener('scroll', this.onScroll, false);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    const { infiniteScroll } = this.props;\n    if (infiniteScroll && this.scrollElement) {\n      this.scrollElement.removeEventListener('scroll', this.onScroll, false);\n    }\n  }\n  componentWillReceiveProps() {\n    const { dataSource } = this.props;\n    const { selectAll, selectedRowKeys } = this.state;\n    if (selectAll && dataSource.length > selectedRowKeys.length) {\n      this.onChange(dataSource.map(v => v.key), dataSource);\n    }\n  }\n  onChange = (selectedRowKeys, selectedRows) => {\n    let {\n      dataSource,\n      actionBar,\n      rowSelection: { onChange }\n    } = this.props;\n    this.setState(() => ({\n      showActionBar: actionBar && selectedRowKeys.length > 0,\n      showMultiSelect: selectedRowKeys.length > 0,\n      selectedRowKeys: selectedRowKeys,\n      selectAll: dataSource.length === selectedRowKeys.length\n    }));\n    onChange && onChange(selectedRowKeys, selectedRows);\n  };\n\n  getLoader = () => {\n    let { infiniteScroll } = this.props;\n    const loaderProps = infiniteScroll\n      ? {\n          ...DEFAULT_LOADER_PROPS,\n          size: 'sizeXSmall',\n          type: 'Small',\n          style: {\n            padding: '12px 0px'\n          }\n        }\n      : DEFAULT_LOADER_PROPS;\n    return <Loader {...loaderProps} />;\n  };\n\n  render() {\n    let { rowSelection, actionBar, children, loading } = this.props;\n    let { showActionBar, showMultiSelect, selectedRowKeys } = this.state;\n\n    /**\n     * Check if rowSelection props is been passed, If yes override the onChange property of it.\n     * Also if onChange prop is passed and the rowSelection is not available, create a new rowSelection object with onChange method.\n     */\n    const updatedRowSelection = rowSelection\n      ? {\n          ...rowSelection,\n          onChange: this.onChange,\n          selectedRowKeys\n        }\n      : null;\n\n    const antProps = updatedRowSelection\n      ? {\n          ...this.props,\n          rowSelection: updatedRowSelection\n        }\n      : {\n          ...this.props\n        };\n    return (\n      <MtTable\n        innerRef={ele => (this.tableRef = ele)}\n        showMultiSelect={showMultiSelect}\n        {...this.styleProps}\n      >\n        <AntTable {...antProps}>{children}</AntTable>\n        {loading && this.getLoader()}\n        {showActionBar && (\n          <ActionBar {...actionBar}>\n            {actionBar ? actionBar.actionItem : false}\n          </ActionBar>\n        )}\n      </MtTable>\n    );\n  }\n}\nTable.Column = AntTable.Column;\nexport default Table;\n"]}
