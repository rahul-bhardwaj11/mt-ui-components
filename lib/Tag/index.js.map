{"version":3,"sources":["../../src/Tag/index.js"],"names":["getMargin","props","margin","marginTop","marginRight","marginBottom","marginLeft","ButtonWrapper","button","colors","OUTER_SPACE","TAG_HOVER_TEXT_COLOR","TROPICAL_BLUE","DefaultTag","INDIGO","SILVER","ActionTag","AppliedTag","DisabledTag","PEARL","CheckableWrappedTag","ALTO","TYPES","NORMAL","ADD","ADDED","SELECTED","SELECTION","ACTION","Tag","getWrappedTag","applied","disabled","checkable","children","type","TagComponent","AntTagComponent","CheckableTag","WrappedTag","WrappedTagProps","onClick","propTypes","node","string","bool","padding","func","shape","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport AntTag from 'antd/lib/tag';\nimport 'antd/lib/tag/style/index.css';\nimport styled from 'styled-components';\nimport theme from '../styles/theme';\nimport Icon from '../Icon';\n\nconst getMargin = props => {\n  let {\n    marginTop = '0px',\n    marginRight = '5px',\n    marginBottom = '12px',\n    marginLeft = '0px'\n  } = props.margin;\n  return `${marginTop} ${marginRight} ${marginBottom} ${marginLeft}`;\n};\n\nconst ButtonWrapper = styled.button`\n  display: inline-block;\n  margin: ${props => getMargin(props)};\n  border: none;\n  background: transparent;\n  border-radius: 16px;\n  .ant-tag {\n    background: #fff;\n    color: ${theme.colors.OUTER_SPACE};\n    font-size: 12px;\n    line-height: 24px;\n    border-radius: 16px;\n    height: 24px;\n    padding: 0 15px;\n    margin: 0px;\n    &:active {\n      border: 1px solid ${theme.colors.TAG_HOVER_TEXT_COLOR};\n      background-color: ${theme.colors.TROPICAL_BLUE};\n      color: ${theme.colors.TAG_HOVER_TEXT_COLOR};\n    }\n  }\n`;\n\nconst DefaultTag = styled(ButtonWrapper)`\n  &:focus {\n    .ant-tag {\n      border: 1px solid ${theme.colors.INDIGO};\n      color: ${theme.colors.INDIGO};\n    }\n  }\n  &:hover {\n    .ant-tag {\n      border: 1px solid ${theme.colors.SILVER};\n      color: ${theme.colors.OUTER_SPACE};\n    }\n    .anticon-cross {\n      color: ${theme.colors.OUTER_SPACE};\n    }\n  }\n  .tagIcon {\n    font-size: 10px;\n    margin-left: 8px;\n  }\n`;\n\nconst ActionTag = styled(ButtonWrapper)`\n  .ant-tag {\n    color: ${theme.colors.INDIGO};\n    border: 1px solid ${theme.colors.INDIGO};\n  }\n`;\nconst AppliedTag = styled(ButtonWrapper)`\n  .ant-tag {\n    color: ${theme.colors.INDIGO};\n    border: 1px solid ${theme.colors.INDIGO};\n    background-color: ${theme.colors.TROPICAL_BLUE};\n  }\n`;\n\nconst DisabledTag = styled(ButtonWrapper)`\n  .ant-tag {\n    color: ${theme.colors.SILVER};\n    border: 1px solid ${theme.colors.PEARL};\n  }\n`;\nconst CheckableWrappedTag = styled(ButtonWrapper)`\n  .ant-tag-checkable:not(.ant-tag-checkable-checked) {\n    border: 1px solid ${theme.colors.ALTO};\n    &:hover {\n      color: ${theme.colors.OUTER_SPACE};\n    }\n  }\n  .ant-tag {\n    &.ant-tag-checkable {\n      &.ant-tag-checkable-checked {\n        border: 1px solid ${theme.colors.TAG_HOVER_TEXT_COLOR};\n        background-color: ${theme.colors.TROPICAL_BLUE};\n        color: ${theme.colors.TAG_HOVER_TEXT_COLOR};\n        &:hover {\n          border: 1px solid ${theme.colors.TAG_HOVER_TEXT_COLOR};\n          background-color: ${theme.colors.TROPICAL_BLUE};\n          color: ${theme.colors.TAG_HOVER_TEXT_COLOR};\n        }\n      }\n    }\n  }\n`;\n\nconst TYPES = {\n  NORMAL: 'normal',\n  ADD: 'add',\n  ADDED: 'added',\n  SELECTED: 'selected',\n  SELECTION: 'selection',\n  ACTION: 'action'\n};\n\nclass Tag extends Component {\n  static propTypes = {\n    children: PropTypes.node,\n    type: PropTypes.string,\n    applied: PropTypes.bool,\n    disabled: PropTypes.bool,\n    checkable: PropTypes.bool,\n    padding: PropTypes.string,\n    onClick: PropTypes.func,\n    margin: PropTypes.shape({\n      marginTop: PropTypes.string,\n      marginRight: PropTypes.string,\n      marginBottom: PropTypes.string,\n      marginLeft: PropTypes.string\n    })\n  };\n\n  static defaultProps = {\n    type: TYPES.NORMAL,\n    onClick: () => {},\n    margin: {}\n  };\n\n  getWrappedTag = () => {\n    let { applied, disabled, checkable } = this.props;\n    if (applied) {\n      return AppliedTag;\n    } else if (disabled) {\n      return DisabledTag;\n    } else if (checkable) {\n      return CheckableWrappedTag;\n    }\n    return DefaultTag;\n  };\n  render() {\n    let { children, type, checkable } = this.props;\n    let TagComponent;\n    let AntTagComponent = checkable ? AntTag.CheckableTag : AntTag;\n    let WrappedTag = this.getWrappedTag();\n    let WrappedTagProps = {\n      ...this.props,\n      onClick: () => {}\n    };\n    switch (type) {\n      case TYPES.NORMAL:\n        TagComponent = (\n          <WrappedTag {...WrappedTagProps}>\n            <AntTagComponent {...this.props}>{children}</AntTagComponent>\n          </WrappedTag>\n        );\n        break;\n      case TYPES.ADD:\n        TagComponent = (\n          <WrappedTag {...WrappedTagProps}>\n            <AntTagComponent {...this.props}>\n              {children}\n              <Icon type=\"edit\" className=\"tagIcon\" />\n            </AntTagComponent>\n          </WrappedTag>\n        );\n        break;\n      case TYPES.ADDED:\n        TagComponent = (\n          <WrappedTag {...WrappedTagProps}>\n            <AntTagComponent {...this.props}>\n              {children}\n              <Icon type=\"cross\" className=\"tagIcon\" />\n            </AntTagComponent>\n          </WrappedTag>\n        );\n        break;\n      case TYPES.SELECTION:\n        TagComponent = (\n          <WrappedTag {...WrappedTagProps}>\n            <AntTagComponent {...this.props}>\n              {children}\n              <Icon type=\"tick\" className=\"tagIcon\" />\n            </AntTagComponent>\n          </WrappedTag>\n        );\n        break;\n      case TYPES.SELECTED:\n        TagComponent = (\n          <WrappedTag {...WrappedTagProps}>\n            <AntTagComponent {...this.props}>{children}</AntTagComponent>\n          </WrappedTag>\n        );\n        break;\n      case TYPES.ACTION:\n        TagComponent = (\n          <WrappedTag {...WrappedTagProps}>\n            <ActionTag {...this.props}>\n              <AntTagComponent {...this.props}>{children}</AntTagComponent>\n            </ActionTag>\n          </WrappedTag>\n        );\n        break;\n    }\n    return TagComponent;\n  }\n}\n\nTag.CheckableTag = AntTag.CheckableTag;\nexport default Tag;\n"]}