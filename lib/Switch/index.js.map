{"version":3,"sources":["../../src/Switch/index.js"],"names":["MtSwitch","div","colors","TAG_HOVER_TEXT_COLOR","noop","undefined","Switch","props","onChange","setState","checked","state","nextProps","className","propTypes","bool","func","string","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;;;AAEA,IAAMA,WAAW,2BAAOC,GAAlB,kBAEkB,gBAAMC,MAAN,CAAaC,oBAF/B,CAAN;;AAwBA,IAAMC,OAAO,SAAPA,IAAO;AAAA,SAAMC,SAAN;AAAA,CAAb;;IAEMC,M;;;AACJ,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA,sIACXA,KADW;;AAAA,UAyBnBC,QAzBmB,GAyBR,mBAAW;AACpB,YAAKC,QAAL,CAAc;AACZC,iBAASA;AADG,OAAd;AAGA,YAAKH,KAAL,CAAWC,QAAX,CAAoBE,OAApB;AACD,KA9BkB;;AAEjB,UAAKC,KAAL,GAAa;AACXD,eAAS,MAAKH,KAAL,CAAWG,OAAX,IAAsB;AADpB,KAAb;AAFiB;AAKlB;;;;8CAEyBE,S,EAAW;AACnC,UAAIA,UAAUF,OAAV,KAAsB,KAAKC,KAAL,CAAWD,OAArC,EAA8C;AAC5C,aAAKD,QAAL,CAAc;AACZC,mBAASE,UAAUF;AADP,SAAd;AAGD;AACF;;;6BAmBQ;AAAA,UACDA,OADC,GACW,KAAKC,KADhB,CACDD,OADC;;AAEP,aACE;AAAC,gBAAD;AAAA;AACE;AACE,mBAASA,OADX;AAEE,qBAAW,KAAKH,KAAL,CAAWM,SAFxB;AAGE,oBAAU,KAAKL;AAHjB;AADF,OADF;AASD;;;;;AA5CGF,M,CAgBGQ,S,GAAY;AACjBJ,WAAS,oBAAUK,IADF;AAEjBP,YAAU,oBAAUQ,IAFH;AAGjBH,aAAW,oBAAUI;AAHJ,C;AAhBfX,M,CAsBGY,Y,GAAe;AACpBV,YAAUJ;AADU,C;kBAwBTE,M","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport AntSwitch from 'antd/lib/switch';\nimport 'antd/lib/switch/style/index.css';\nimport styled from 'styled-components';\nimport theme from '../styles/theme';\n\nconst MtSwitch = styled.div`\n  .ant-switch-checked {\n    background-color: ${theme.colors.TAG_HOVER_TEXT_COLOR};\n  }\n  .ant-switch {\n    min-width: 36px;\n    height: 20px;\n    &:after {\n      width: 14px;\n      height: 14px;\n      top: 2px;\n      margin-left: 0px;\n    }\n  }\n  .ant-switch-checked {\n    &:after {\n      width: 14px;\n      height: 14px;\n      top: 2px;\n      margin-left: -16px;\n    }\n  }\n`;\n\nconst noop = () => undefined;\n\nclass Switch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checked: this.props.checked || false\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.checked !== this.state.checked) {\n      this.setState({\n        checked: nextProps.checked\n      });\n    }\n  }\n\n  static propTypes = {\n    checked: PropTypes.bool,\n    onChange: PropTypes.func,\n    className: PropTypes.string\n  };\n\n  static defaultProps = {\n    onChange: noop\n  };\n\n  onChange = checked => {\n    this.setState({\n      checked: checked\n    });\n    this.props.onChange(checked);\n  };\n\n  render() {\n    let { checked } = this.state;\n    return (\n      <MtSwitch>\n        <AntSwitch\n          checked={checked}\n          className={this.props.className}\n          onChange={this.onChange}\n        />\n      </MtSwitch>\n    );\n  }\n}\nexport default Switch;\n"]}