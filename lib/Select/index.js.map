{"version":3,"sources":["../../src/Select/index.js"],"names":["Option","AntSelect","MtWrapper","styled","div","Select","props","options","style","el","selectDropdownRef","event","stopPropagation","map","option","key","title","content","Component","propTypes","PropTypes","any","isRequired","onChange","func","object","defaultValue","oneOfType","string","number","defaultProps","minWidth"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;AACA;;AACA;;AACA;;;;AACA;;;;;;AAEA,IAAMA,SAASC,iBAAUD,MAAzB;;AAEA,IAAME,YAAYC,2BAAOC,GAAnB,iBAAN;;IAIMC,M;;;;;;;;;;6BAaK;AAAA;;AAAA,mBACkB,KAAKC,KADvB;AAAA,UACDC,OADC,UACDA,OADC;AAAA,UACQC,KADR,UACQA,KADR;;;AAGP,aACE;AAAC,iBAAD;AAAA;AACE,oBAAU,sBAAM;AACd,gBAAIC,EAAJ,EAAQ;AACN,qBAAKC,iBAAL,GAAyBD,EAAzB;AACD;AACF,WALH;AAME,iBAAOD;AANT;AAQE;AAAC,0BAAD;AAAA,qCACM,KAAKF,KADX;AAEE,qBAAS,wBAAS;AAChBK,oBAAMC,eAAN;AACD,aAJH;AAKE,+BAAmB,6BAAM;AACvB,qBAAO,OAAKF,iBAAZ;AACD;AAPH;AASGH,kBAAQM,GAAR,CAAY,kBAAU;AACrB,mBACE;AAAC,oBAAD;AAAA;AACE,qBAAKC,OAAOC,GADd;AAEE,uBAAOD,OAAOC,GAFhB;AAGE,uBAAO,OAAKT,KAAL,CAAWU,KAAX,IAAoBF,OAAOE;AAHpC;AAKG,qBAAOF,OAAOG,OAAd,KAA0B,QAA1B,GACC,8BAAC,sBAAD,IAAc,SAASH,OAAOG,OAA9B,GADD,GAGCH,OAAOG;AARX,aADF;AAaD,WAdA;AATH;AARF,OADF;AAoCD;;;EApDkBC,gB;;AAAfb,M,CACGc,S,GAAY;AACjBZ,WAASa,oBAAUC,GAAV,CAAcC,UADN;AAEjBC,YAAUH,oBAAUI,IAFH;AAGjBhB,SAAOY,oBAAUK,MAHA;AAIjBC,gBAAcN,oBAAUO,SAAV,CAAoB,CAACP,oBAAUQ,MAAX,EAAmBR,oBAAUS,MAA7B,CAApB,CAJG;AAKjBb,SAAOI,oBAAUQ;AALA,C;AADfvB,M,CASGyB,Y,GAAe;AACpBtB,SAAO,EAAEuB,UAAU,GAAZ;AADa,C;kBA8CT1B,M","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport 'antd/lib/dropdown/style/css';\nimport AntSelect from 'antd/lib/select';\nimport 'antd/lib/select/style/index.css';\nimport '../styles/override.scss';\nimport styled from 'styled-components';\nimport StringToHTML from '../StringToHTML';\n\nconst Option = AntSelect.Option;\n\nconst MtWrapper = styled.div`\n  display: inline-block;\n`;\n\nclass Select extends Component {\n  static propTypes = {\n    options: PropTypes.any.isRequired,\n    onChange: PropTypes.func,\n    style: PropTypes.object,\n    defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    title: PropTypes.string\n  };\n\n  static defaultProps = {\n    style: { minWidth: 125 }\n  };\n\n  render() {\n    let { options, style } = this.props;\n\n    return (\n      <MtWrapper\n        innerRef={el => {\n          if (el) {\n            this.selectDropdownRef = el;\n          }\n        }}\n        style={style}\n      >\n        <AntSelect\n          {...this.props}\n          onClick={event => {\n            event.stopPropagation();\n          }}\n          getPopupContainer={() => {\n            return this.selectDropdownRef;\n          }}\n        >\n          {options.map(option => {\n            return (\n              <Option\n                key={option.key}\n                value={option.key}\n                title={this.props.title || option.title}\n              >\n                {typeof option.content === 'string' ? (\n                  <StringToHTML content={option.content} />\n                ) : (\n                  option.content\n                )}\n              </Option>\n            );\n          })}\n        </AntSelect>\n      </MtWrapper>\n    );\n  }\n}\n\nexport default Select;\n"]}