{"version":3,"sources":["../../src/Select/index.js"],"names":["Option","AntSelect","Select","options","props","event","stopPropagation","map","option","index","key","content","Component","propTypes","PropTypes","any","isRequired","onChange","func","style","object","defaultValue","oneOfType","string","number","defaultProps","minWidth"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;AACA;;AACA;;AACA;;;;;;AAEA,IAAMA,SAASC,iBAAUD,MAAzB;;IAEME,M;;;;;;;;;;6BAYK;AAAA,UACDC,OADC,GACW,KAAKC,KADhB,CACDD,OADC;;AAEP,aACE;AAAC,wBAAD;AAAA,mCACM,KAAKC,KADX;AAEE,mBAAS,wBAAS;AAChBC,kBAAMC,eAAN;AACD;AAJH;AAMGH,gBAAQI,GAAR,CAAY,UAACC,MAAD,EAASC,KAAT,EAAmB;AAC9B,iBACE;AAAC,kBAAD;AAAA,cAAQ,KAAKA,KAAb,EAAoB,OAAOD,OAAOE,GAAlC;AACG,mBAAOF,OAAOG,OAAd,KAA0B,QAA1B,GACC,8BAAC,sBAAD,IAAc,SAASH,OAAOG,OAA9B,GADD,GAGCH,OAAOG;AAJX,WADF;AASD,SAVA;AANH,OADF;AAoBD;;;EAlCkBC,gB;;AAAfV,M,CACGW,S,GAAY;AACjBV,WAASW,oBAAUC,GAAV,CAAcC,UADN;AAEjBC,YAAUH,oBAAUI,IAFH;AAGjBC,SAAOL,oBAAUM,MAHA;AAIjBC,gBAAcP,oBAAUQ,SAAV,CAAoB,CAACR,oBAAUS,MAAX,EAAmBT,oBAAUU,MAA7B,CAApB;AAJG,C;AADftB,M,CAQGuB,Y,GAAe;AACpBN,SAAO,EAAEO,UAAU,GAAZ;AADa,C;kBA6BTxB,M","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport 'antd/lib/dropdown/style/css';\nimport AntSelect from 'antd/lib/select';\nimport 'antd/lib/select/style/index.css';\nimport '../styles/override.scss';\nimport StringToHTML from '../StringToHTML';\n\nconst Option = AntSelect.Option;\n\nclass Select extends Component {\n  static propTypes = {\n    options: PropTypes.any.isRequired,\n    onChange: PropTypes.func,\n    style: PropTypes.object,\n    defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  };\n\n  static defaultProps = {\n    style: { minWidth: 125 }\n  };\n\n  render() {\n    let { options } = this.props;\n    return (\n      <AntSelect\n        {...this.props}\n        onClick={event => {\n          event.stopPropagation();\n        }}\n      >\n        {options.map((option, index) => {\n          return (\n            <Option key={index} value={option.key}>\n              {typeof option.content === 'string' ? (\n                <StringToHTML content={option.content} />\n              ) : (\n                option.content\n              )}\n            </Option>\n          );\n        })}\n      </AntSelect>\n    );\n  }\n}\n\nexport default Select;\n"]}