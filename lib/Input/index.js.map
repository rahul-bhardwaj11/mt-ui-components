{"version":3,"sources":["../../src/Input/index.js"],"names":["noop","undefined","isString","value","MtInput","styled","div","theme","colors","ALTO","SILVER","DISABLE","Input","state","handleValue","trimmedValue","trim","length","maxLength","props","substring","onChange","event","target","setState","moveCaretAtEnd","temp_value","e","onFocus","newProps","newValue","errors","maxLengthClassName","Component","propTypes","placeholder","PropTypes","string","oneOfType","bool","number","func","type","oneOf","array","defaultProps","TextArea","AntInput"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport AntInput from 'antd/lib/input';\nimport 'antd/lib/input/style/index.css';\nimport styled from 'styled-components';\nimport theme from '../styles/theme';\nimport classnames from 'classnames';\n\nconst noop = () => undefined;\n\nconst isString = value => {\n  return typeof value === 'string';\n};\n\nconst MtInput = styled.div`\n  .counterStyle {\n    color: #696969;\n    font-size: 12px;\n    margin-left: 0;\n    padding: 4px 8px;\n    border: 1px solid #ccc;\n    border-left: none;\n    line-height: 20px;\n    float: left;\n  }\n  .displayN {\n    display: none;\n  }\n\n  .error {\n    font-size: 12px;\n    bottom: -24px;\n    left: 8px;\n    position: absolute;\n    color: #c63434;\n    font-weight: bold;\n  }\n  .ant-input {\n    border: 1px solid ${theme.colors.ALTO};\n  }\n  .ant-input {\n    &:hover {\n      border-color: ${theme.colors.SILVER};\n    }\n  }\n  .ant-input {\n    &:focus {\n      border-color: ${theme.colors.SILVER};\n      outline: 0;\n      box-shadow: 0 0 0 0px rgba(24, 144, 255, 0.2);\n    }\n  }\n  .ant-input-disabled {\n    border-color: ${theme.colors.DISABLE};\n    background-color: #f8f8f8;\n    color: ${theme.colors.SILVER};\n    &:hover {\n      border-color: ${theme.colors.DISABLE};\n    }\n  }\n  .ant-input-error {\n    border-color: #ff6060;\n  }\n`;\n\nclass Input extends Component {\n  static propTypes = {\n    placeholder: PropTypes.string,\n    maxLength: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n    maxLengthClassName: PropTypes.string,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    type: PropTypes.oneOf(['text', 'number', 'password', 'file']),\n    errors: PropTypes.array\n  };\n\n  static defaultProps = {\n    onChange: noop,\n    onFocus: noop,\n    errors: [],\n    type: 'text'\n  };\n\n  state = {};\n\n  handleValue = value => {\n    let trimmedValue = isString(value) ? value.trim() : value;\n    trimmedValue = trimmedValue || \"\";\n    value = trimmedValue.length ? value : trimmedValue;\n    const { maxLength } = this.props;\n    if (maxLength) {\n      return maxLength <= value.length ? value : value.substring(0, maxLength);\n    }\n    return value;\n  };\n\n  onChange = event => {\n    const { onChange } = this.props;\n    const value = this.handleValue(event.target.value);\n    this.setState({ value });\n    onChange(event, value);\n  };\n\n  moveCaretAtEnd = e => {\n    var temp_value = e.target.value;\n    e.target.value = '';\n    e.target.value = temp_value;\n    this.props.onFocus(e);\n  };\n\n  componentWillMount() {\n    const { value = '' } = this.props;\n    this.setState({ value: this.handleValue(value) });\n  }\n\n  componentWillReceiveProps(newProps) {\n    const { value } = this.props;\n    let { value: newValue } = newProps;\n    if (newValue !== value) {\n      this.setState({ value: this.handleValue(newValue) });\n    }\n  }\n\n  render() {\n    const { errors, maxLength, maxLengthClassName } = this.props;\n    const { value } = this.state;\n    return (\n      <MtInput>\n        <AntInput\n          {...this.props}\n          onChange={this.onChange}\n          onFocus={this.moveCaretAtEnd}\n        />\n        <div\n          key=\"maxLength\"\n          className={classnames(\n            { ['counterStyle']: maxLength, displayN: !maxLength },\n            maxLengthClassName\n          )}\n        >\n          {maxLength && maxLength - value.length}\n        </div>\n        <div\n          key=\"error\"\n          className={classnames(errors[0] ? 'error' : 'displayN')}\n        >\n          {errors[0]}\n        </div>\n      </MtInput>\n    );\n  }\n}\nInput.TextArea = AntInput.TextArea;\nexport default Input;\n"]}