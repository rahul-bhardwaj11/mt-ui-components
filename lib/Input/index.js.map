{"version":3,"sources":["../../src/Input/index.js"],"names":["noop","undefined","isString","value","MtInput","colors","ALTO","SILVER","DISABLE","Input","props","handleValue","trimmedValue","trim","length","maxLength","substring","onChange","event","target","setState","moveCaretAtEnd","temp_value","e","onFocus","state","newProps","newValue","errors","maxLengthClassName","propTypes","placeholder","string","oneOfType","bool","number","func","type","oneOf","array","defaultProps","TextArea"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport AntInput from 'antd/lib/input';\nimport 'antd/lib/input/style/index.css';\nimport styled from 'styled-components';\nimport theme from '../styles/theme';\nimport classnames from 'classnames';\n\nconst noop = () => undefined;\n\nconst isString = value => {\n  return typeof value === 'string';\n};\n\nconst MtInput = styled.div`\n  .counterStyle {\n    color: #696969;\n    font-size: 12px;\n    margin-left: 0;\n    padding: 4px 8px;\n    border: 1px solid #ccc;\n    border-left: none;\n    line-height: 20px;\n    float: left;\n  }\n  .displayN {\n    display: none;\n  }\n\n  .error {\n    font-size: 12px;\n    bottom: -24px;\n    left: 8px;\n    position: absolute;\n    color: #c63434;\n    font-weight: bold;\n  }\n  .ant-input {\n    border: 1px solid ${theme.colors.ALTO};\n  }\n  .ant-input {\n    &:hover {\n      border-color: ${theme.colors.SILVER};\n    }\n  }\n  .ant-input {\n    &:focus {\n      border-color: ${theme.colors.SILVER};\n      outline: 0;\n      box-shadow: 0 0 0 0px rgba(24, 144, 255, 0.2);\n    }\n  }\n  .ant-input-disabled {\n    border-color: ${theme.colors.DISABLE};\n    background-color: #f8f8f8;\n    color: ${theme.colors.SILVER};\n    &:hover {\n      border-color: ${theme.colors.DISABLE};\n    }\n  }\n  .ant-input-error {\n    border-color: #ff6060;\n  }\n`;\n\nclass Input extends Component {\n  static propTypes = {\n    placeholder: PropTypes.string,\n    maxLength: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n    maxLengthClassName: PropTypes.string,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    type: PropTypes.oneOf(['text', 'number', 'password', 'file']),\n    errors: PropTypes.array\n  };\n\n  static defaultProps = {\n    onChange: noop,\n    onFocus: noop,\n    errors: [],\n    type: 'text'\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.handleValue(this.props.value)\n    };\n  }\n\n  handleValue = value => {\n    let trimmedValue = isString(value) ? value.trim() : value;\n    trimmedValue = trimmedValue || '';\n    value = trimmedValue.length ? value : trimmedValue;\n    const { maxLength } = this.props;\n    if (maxLength) {\n      return maxLength <= value.length ? value : value.substring(0, maxLength);\n    }\n    return value;\n  };\n\n  onChange = event => {\n    const { onChange } = this.props;\n    const value = this.handleValue(event.target.value);\n    this.setState({ value });\n    onChange(event, value);\n  };\n\n  moveCaretAtEnd = e => {\n    var temp_value = e.target.value;\n    e.target.value = '';\n    e.target.value = temp_value;\n    this.props.onFocus(e);\n  };\n\n  componentWillMount() {\n    const { value = '' } = this.props;\n    this.setState({ value: this.handleValue(value) });\n  }\n\n  componentWillReceiveProps(newProps) {\n    const { value } = this.props;\n    let { value: newValue } = newProps;\n    if (newValue !== value) {\n      this.setState({ value: this.handleValue(newValue) });\n    }\n  }\n\n  render() {\n    const { errors, maxLength, maxLengthClassName } = this.props;\n    const { value } = this.state;\n    return (\n      <MtInput>\n        <AntInput\n          {...this.props}\n          value={value}\n          onChange={this.onChange}\n          onFocus={this.moveCaretAtEnd}\n        />\n        <div\n          key=\"maxLength\"\n          className={classnames(\n            { ['counterStyle']: maxLength, displayN: !maxLength },\n            maxLengthClassName\n          )}\n        >\n          {maxLength && maxLength - value.length}\n        </div>\n        <div\n          key=\"error\"\n          className={classnames(errors[0] ? 'error' : 'displayN')}\n        >\n          {errors[0]}\n        </div>\n      </MtInput>\n    );\n  }\n}\nInput.TextArea = AntInput.TextArea;\nexport default Input;\n"]}