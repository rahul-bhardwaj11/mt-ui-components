{"version":3,"sources":["../../src/ReadMore/index.js"],"names":["ReadMore","state","expanded","truncated","handleTruncate","bind","toggleLines","setState","event","preventDefault","props","children","moreText","lessText","lines","fontFamily","defaultProps","propTypes","node","isRequired","number","string"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;IAEMA,Q;;;AACJ,sBAAc;AAAA;;AAAA;;AAGZ,UAAKC,KAAL,GAAa;AACXC,gBAAU,KADC;AAEXC,iBAAW;AAFA,KAAb;;AAKA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,OAAtB;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBD,IAAjB,OAAnB;AATY;AAUb;;;;mCAEcF,S,EAAW;AACxB,UAAI,KAAKF,KAAL,CAAWE,SAAX,KAAyBA,SAA7B,EAAwC;AACtC,aAAKI,QAAL,CAAc;AACZJ;AADY,SAAd;AAGD;AACF;;;gCAEWK,K,EAAO;AACjBA,YAAMC,cAAN;;AAEA,WAAKF,QAAL,CAAc;AACZL,kBAAU,CAAC,KAAKD,KAAL,CAAWC;AADV,OAAd;AAGD;;;6BAEQ;AAAA,mBACyC,KAAKQ,KAD9C;AAAA,UACCC,QADD,UACCA,QADD;AAAA,UACWC,QADX,UACWA,QADX;AAAA,UACqBC,QADrB,UACqBA,QADrB;AAAA,UAC+BC,KAD/B,UAC+BA,KAD/B;AAAA,mBAGyB,KAAKb,KAH9B;AAAA,UAGCC,QAHD,UAGCA,QAHD;AAAA,UAGWC,SAHX,UAGWA,SAHX;;;AAKP,aACE;AAAA;AAAA,UAAK,OAAO,EAAEY,YAAY,WAAd,EAAZ;AACE;AAAA;AAAA;AACE,mBAAO,CAACb,QAAD,IAAaY,KADtB;AAEE,sBAAU,CACR;AAAA;AAAA,gBAAM,KAAI,MAAV;AAAA;AAAA,aADQ,EAER;AAAA;AAAA,gBAAK,WAAU,UAAf,EAA0B,KAAI,WAA9B;AACE;AAAA;AAAA,kBAAG,SAAS,KAAKR,WAAjB;AAA+BO;AAA/B;AADF,aAFQ,CAFZ;AAQE,wBAAY,KAAKT;AARnB;AAUGO;AAVH,SADF;AAaG,SAACR,SAAD,IACCD,QADD,IAEG;AAAA;AAAA,YAAM,WAAU,UAAhB;AACE;AAAA;AAAA,cAAG,SAAS,KAAKI,WAAjB;AAAA;AAAgCM;AAAhC;AADF;AAfN,OADF;AAsBD;;;;;AAGHZ,SAASgB,YAAT,GAAwB;AACtBF,SAAO,CADe;AAEtBF,YAAU,WAFY;AAGtBC,YAAU;AAHY,CAAxB;;AAMAb,SAASiB,SAAT,GAAqB;AACnBN,YAAU,oBAAUO,IAAV,CAAeC,UADN;AAEnBL,SAAO,oBAAUM,MAFE;AAGnBR,YAAU,oBAAUS,MAHD;AAInBR,YAAU,oBAAUQ;AAJD,CAArB;;kBAOerB,Q","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Truncate from 'react-truncate';\n\nclass ReadMore extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      expanded: false,\n      truncated: false\n    };\n\n    this.handleTruncate = this.handleTruncate.bind(this);\n    this.toggleLines = this.toggleLines.bind(this);\n  }\n\n  handleTruncate(truncated) {\n    if (this.state.truncated !== truncated) {\n      this.setState({\n        truncated\n      });\n    }\n  }\n\n  toggleLines(event) {\n    event.preventDefault();\n\n    this.setState({\n      expanded: !this.state.expanded\n    });\n  }\n\n  render() {\n    const { children, moreText, lessText, lines } = this.props;\n\n    const { expanded, truncated } = this.state;\n\n    return (\n      <div style={{ fontFamily: 'Open sans' }}>\n        <Truncate\n          lines={!expanded && lines}\n          ellipsis={[\n            <span key=\"3dot\">...</span>,\n            <div className=\"viewMore\" key=\"view_more\">\n              <a onClick={this.toggleLines}>{lessText}</a>\n            </div>\n          ]}\n          onTruncate={this.handleTruncate}\n        >\n          {children}\n        </Truncate>\n        {!truncated &&\n          expanded && (\n            <span className=\"viewLess\">\n              <a onClick={this.toggleLines}> {moreText}</a>\n            </span>\n          )}\n      </div>\n    );\n  }\n}\n\nReadMore.defaultProps = {\n  lines: 3,\n  moreText: 'view more',\n  lessText: 'view less'\n};\n\nReadMore.propTypes = {\n  children: PropTypes.node.isRequired,\n  lines: PropTypes.number,\n  moreText: PropTypes.string,\n  lessText: PropTypes.string\n};\n\nexport default ReadMore;\n"]}