{"version":3,"sources":["../../src/Toast/index.js"],"names":["TOAST_TYPES","ReloadBtn","window","location","href","HideBtn","hide","propTypes","PropTypes","func","isRequired","Toast","state","timer","style","transitionDuration","ANIMATION_TRANSITION_DURATION","removeToast","setTimeout","props","onHide","TOAST_REMOVE_TIME","stopTimer","clearTimeout","setState","hideToast","startTimer","time","handleTimer","autoHide","freeze","timeout","getClasses","type","toast","show","newProps","message","hideBtn","reloadBtn","load","float","Component","string","oneOf","bool","number","defaultProps","DEFAULT_HIDE_TIMER"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport Loader from '../Loader';\nimport {\n  DEFAULT_HIDE_TIMER,\n  ANIMATION_TRANSITION_DURATION,\n  TOAST_REMOVE_TIME\n} from './constants';\nimport StyledToast from './css';\n\nexport const TOAST_TYPES = ['success', 'warning', 'error', 'info', 'loading'];\n\nconst ReloadBtn = () => {\n  return (\n    <div\n      className={classnames('floatR')}\n      onClick={() => {\n        window.location.href = window.location.href; // eslint-disable-line\n      }}\n    >\n      <span className={classnames('floatR', 'toastReloadBtn')}>Reload</span>\n    </div>\n  );\n};\n\nconst HideBtn = ({ hide }) => {\n  return (\n    <div className={classnames('floatR', 'link')} onClick={hide}>\n      Hide\n    </div>\n  );\n};\n\nHideBtn.propTypes = {\n  hide: PropTypes.func.isRequired\n};\n\nexport default class Toast extends Component {\n  static propTypes = {\n    message: PropTypes.string.isRequired,\n    type: PropTypes.oneOf(TOAST_TYPES),\n    hideBtn: PropTypes.bool,\n    reloadBtn: PropTypes.bool,\n    load: PropTypes.bool,\n    freeze: PropTypes.bool,\n    autoHide: PropTypes.bool,\n    timeout: PropTypes.number,\n    onHide: PropTypes.func\n  };\n  static defaultProps = {\n    timeout: DEFAULT_HIDE_TIMER,\n    autoHide: true,\n    hideBtn: true,\n    freeze: false,\n    load: false\n  };\n  state = {\n    timer: null\n  };\n\n  style = {\n    transitionDuration: `${ANIMATION_TRANSITION_DURATION}ms`\n  };\n\n  removeToast = () => setTimeout(this.props.onHide, TOAST_REMOVE_TIME);\n\n  stopTimer = () => {\n    let { timer } = this.state;\n    if (timer) {\n      clearTimeout(timer);\n      this.setState({ timer: null });\n    }\n  };\n\n  hideToast = () => {\n    this.stopTimer();\n    this.removeToast();\n  };\n\n  startTimer = time => {\n    let { timer } = this.state;\n    this.stopTimer();\n    timer = setTimeout(() => {\n      this.setState({ timer: null });\n      this.removeToast();\n    }, time);\n    this.setState({ timer });\n  };\n\n  handleTimer = props => {\n    const { autoHide, freeze, timeout } = props;\n    if (freeze) {\n      this.stopTimer();\n    } else if (autoHide) {\n      this.startTimer(timeout);\n    }\n  };\n\n  getClasses = () => {\n    const { timer } = this.state;\n    const { type, autoHide, freeze } = this.props;\n\n    return classnames({\n      toast: true,\n      show: freeze || (autoHide && timer) || !autoHide,\n      [`toast-${type}`]: true,\n      clearfix: true\n    });\n  };\n\n  componentWillReceiveProps(newProps) {\n    this.handleTimer(newProps);\n  }\n\n  componentDidMount() {\n    this.handleTimer(this.props);\n  }\n\n  render() {\n    const { message, hideBtn, freeze, reloadBtn, load } = this.props;\n    return (\n      <StyledToast>\n        <div className={this.getClasses()} style={this.style}>\n          {load && (\n            <Loader\n              size=\"sizeXSmall\"\n              style={{ float: 'left' }}\n              vCenter={false}\n            />\n          )}\n          <span className=\"floatL\">{message}</span>\n          <span>{hideBtn && !freeze && <HideBtn hide={this.hideToast} />}</span>\n          <span>{freeze && reloadBtn && <ReloadBtn />}</span>\n        </div>\n        <div>{freeze && <div className=\"freezeScreen\" />}</div>\n      </StyledToast>\n    );\n  }\n}\n"]}