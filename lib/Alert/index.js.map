{"version":3,"sources":["../../src/Alert/index.js"],"names":["noop","undefined","AlertBox","close","props","id","removeAlert","callback","action","children","type","footer","propTypes","node","isRequired","string","func","okText","cancelText","oneOf","defaultProps","Alert","state","alerts","show","message","confirm","rest","alert","setState","prevState","concat","removeAll","alertsRemoved","forEach","onClose","alertRemoved","filter","renderAlerts","map"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport nanoid from 'nanoid';\nimport Modal from '../Modal';\n\nconst noop = () => undefined;\nclass AlertBox extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    id: PropTypes.string.isRequired,\n    removeAlert: PropTypes.func.isRequired,\n    okText: PropTypes.string,\n    cancelText: PropTypes.string,\n    callback: PropTypes.func,\n    type: PropTypes.oneOf(['Confirm', 'Alert'])\n  };\n  static defaultProps = {\n    callback: noop\n  };\n  close = action => {\n    const { id, removeAlert, callback } = this.props;\n    callback(!!action);\n    removeAlert(id);\n  };\n  render() {\n    let { children, type } = this.props;\n    let footer;\n    if (type === 'Alert') {\n      footer = null;\n    }\n    return (\n      <Modal\n        footer={footer}\n        onCancel={() => {\n          this.close(false);\n        }}\n        onOk={() => {\n          this.close(true);\n        }}\n        visible={true}\n      >\n        {children}\n      </Modal>\n    );\n  }\n}\n\nclass Alert extends Component {\n  state = {\n    alerts: []\n  };\n\n  show = (message = '', { confirm, ...rest } = {}) => {\n    const alert = {\n      id: nanoid(7),\n      message,\n      type: confirm ? 'Confirm' : 'Alert',\n      ...rest\n    };\n\n    this.setState(prevState => ({\n      alerts: prevState.alerts.concat(alert)\n    }));\n    return alert.id;\n  };\n\n  removeAll = () => {\n    const alertsRemoved = this.state.alerts;\n    this.setState({ alerts: [] });\n    alertsRemoved.forEach(alert => alert.onClose && alert.onClose());\n  };\n\n  removeAlert = id => {\n    const alertRemoved = this.state.alerts.filter(alert => alert.id === id)[0];\n    this.setState(prevState => ({\n      alerts: prevState.alerts.filter(alert => alert.id !== id)\n    }));\n    alertRemoved && alertRemoved.onClose && alertRemoved.onClose();\n  };\n  renderAlerts = () => {\n    return this.state.alerts.map(alert => {\n      return (\n        <AlertBox {...alert} key={alert.id} removeAlert={this.removeAlert}>\n          {alert.message}\n        </AlertBox>\n      );\n    });\n  };\n  render() {\n    return this.renderAlerts();\n  }\n}\n\nexport default Alert;\n"]}