{"version":3,"sources":["../../src/Dropdown/index.js"],"names":["Dropdown","onClick","props","key","options","trigger","children","type","label","getPopupContainer","placement","overlay","Array","Component","propTypes","PropTypes","any","isRequired","string","node","func","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;IAEMA,Q;;;;;;;;;;;;;;gNAiBJC,O,GAAU,eAAO;AACf,UAAI,MAAKC,KAAL,CAAWD,OAAf,EAAwB;AACtB,cAAKC,KAAL,CAAWD,OAAX,CAAmBE,GAAnB;AACD;AACF,K;;;;;6BAEQ;AAAA,mBAUH,KAAKD,KAVF;AAAA,UAELE,OAFK,UAELA,OAFK;AAAA,UAGLC,OAHK,UAGLA,OAHK;AAAA,UAILC,QAJK,UAILA,QAJK;AAAA,UAKLC,IALK,UAKLA,IALK;AAAA,UAMLC,KANK,UAMLA,KANK;AAAA,UAOLP,OAPK,UAOLA,OAPK;AAAA,UAQLQ,iBARK,UAQLA,iBARK;AAAA,UASLC,SATK,UASLA,SATK;;AAWP,UAAIC,gBAAJ;AACA,UAAIP,mBAAmBQ,KAAvB,EAA8B;AAC5BD,kBAAU,8BAAC,cAAD,IAAM,SAASP,OAAf,EAAwB,SAAS,KAAKH,OAAtC,GAAV;AACD,OAFD,MAEO;AACLU,kBAAUP,OAAV;AACD;AACD,UAAIG,SAAS,QAAb,EAAuB;AACrBD,mBAAW;AAAC,0BAAD;AAAA;AAASE,mBAAS;AAAlB,SAAX;AACD;AACD,aACE;AAAC,0BAAD;AAAA;AACE,mBAASG,OADX;AAEE,mBAAS,CAACN,OAAD,CAFX;AAGE,qBAAW,cAHb;AAIE,mBAASJ,OAJX;AAKE,6BAAmBQ,iBALrB;AAME,qBAAWC;AANb;AAQE;AAAA;AAAA;AAAA;AAAOJ,kBAAP;AAAA;AAAA;AARF,OADF;AAYD;;;EAvDoBO,gB;;AAAjBb,Q,CACGc,S,GAAY;AACjBV,WAASW,oBAAUC,GAAV,CAAcC,UADN;AAEjBZ,WAASU,oBAAUG,MAFF;AAGjBZ,YAAUS,oBAAUI,IAHH;AAIjBlB,WAASc,oBAAUK,IAJF;AAKjBb,QAAMQ,oBAAUG,MALC;AAMjBV,SAAOO,oBAAUG,MANA;AAOjBT,qBAAmBM,oBAAUK,IAPZ;AAQjBV,aAAWK,oBAAUG;AARJ,C;AADflB,Q,CAYGqB,Y,GAAe;AACpBhB,WAAS,OADW;AAEpBK,aAAW;AAFS,C;kBA6CTV,Q","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport AntDropdown from 'antd/lib/dropdown';\nimport Menu from '../Menu';\nimport 'antd/lib/dropdown/style/index.css';\nimport Button from 'antd/lib/button';\nimport 'antd/lib/button/style/index.css';\n\nclass Dropdown extends Component {\n  static propTypes = {\n    options: PropTypes.any.isRequired,\n    trigger: PropTypes.string,\n    children: PropTypes.node,\n    onClick: PropTypes.func,\n    type: PropTypes.string,\n    label: PropTypes.string,\n    getPopupContainer: PropTypes.func,\n    placement: PropTypes.string\n  };\n\n  static defaultProps = {\n    trigger: 'hover',\n    placement: 'bottomRight'\n  };\n\n  onClick = key => {\n    if (this.props.onClick) {\n      this.props.onClick(key);\n    }\n  };\n\n  render() {\n    let {\n      options,\n      trigger,\n      children,\n      type,\n      label,\n      onClick,\n      getPopupContainer,\n      placement\n    } = this.props;\n    let overlay;\n    if (options instanceof Array) {\n      overlay = <Menu options={options} onClick={this.onClick} />;\n    } else {\n      overlay = options;\n    }\n    if (type === 'button') {\n      children = <Button>{label || 'Button'}</Button>;\n    }\n    return (\n      <AntDropdown\n        overlay={overlay}\n        trigger={[trigger]}\n        prefixCls={'ant-dropdown'}\n        onClick={onClick}\n        getPopupContainer={getPopupContainer}\n        placement={placement}\n      >\n        <div> {children} </div>\n      </AntDropdown>\n    );\n  }\n}\nexport default Dropdown;\n"]}