{"version":3,"sources":["../../src/Dropdown/index.js"],"names":["Dropdown","onClick","props","key","options","trigger","children","type","label","overlay","Array","Component","propTypes","PropTypes","any","isRequired","string","node","func","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;IAEMA,Q;;;;;;;;;;;;;;gNAcJC,O,GAAU,eAAO;AACf,UAAI,MAAKC,KAAL,CAAWD,OAAf,EAAwB;AACtB,cAAKC,KAAL,CAAWD,OAAX,CAAmBE,GAAnB;AACD;AACF,K;;;;;6BAEQ;AAAA,mBACoD,KAAKD,KADzD;AAAA,UACDE,OADC,UACDA,OADC;AAAA,UACQC,OADR,UACQA,OADR;AAAA,UACiBC,QADjB,UACiBA,QADjB;AAAA,UAC2BC,IAD3B,UAC2BA,IAD3B;AAAA,UACiCC,KADjC,UACiCA,KADjC;AAAA,UACwCP,OADxC,UACwCA,OADxC;;AAEP,UAAIQ,gBAAJ;AACA,UAAIL,mBAAmBM,KAAvB,EAA8B;AAC5BD,kBAAU,8BAAC,cAAD,IAAM,SAASL,OAAf,EAAwB,SAAS,KAAKH,OAAtC,GAAV;AACD,OAFD,MAEO;AACLQ,kBAAUL,OAAV;AACD;AACD,UAAIG,SAAS,QAAb,EAAuB;AACrBD,mBAAW;AAAC,0BAAD;AAAA;AAASE,mBAAS;AAAlB,SAAX;AACD;AACD,aACE;AAAC,0BAAD;AAAA;AACE,mBAASC,OADX;AAEE,mBAAS,CAACJ,OAAD,CAFX;AAGE,qBAAW,cAHb;AAIE,mBAASJ;AAJX;AAME;AAAA;AAAA;AAAA;AAAOK,kBAAP;AAAA;AAAA;AANF,OADF;AAUD;;;EAzCoBK,gB;;AAAjBX,Q,CACGY,S,GAAY;AACjBR,WAASS,oBAAUC,GAAV,CAAcC,UADN;AAEjBV,WAASQ,oBAAUG,MAFF;AAGjBV,YAAUO,oBAAUI,IAHH;AAIjBhB,WAASY,oBAAUK,IAJF;AAKjBX,QAAMM,oBAAUG,MALC;AAMjBR,SAAOK,oBAAUG;AANA,C;AADfhB,Q,CAUGmB,Y,GAAe;AACpBd,WAAS;AADW,C;kBAiCTL,Q","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport AntDropdown from 'antd/lib/dropdown';\nimport Menu from '../Menu';\nimport 'antd/lib/dropdown/style/index.css';\nimport Button from 'antd/lib/button';\nimport 'antd/lib/button/style/index.css';\n\nclass Dropdown extends Component {\n  static propTypes = {\n    options: PropTypes.any.isRequired,\n    trigger: PropTypes.string,\n    children: PropTypes.node,\n    onClick: PropTypes.func,\n    type: PropTypes.string,\n    label: PropTypes.string\n  };\n\n  static defaultProps = {\n    trigger: 'hover'\n  };\n\n  onClick = key => {\n    if (this.props.onClick) {\n      this.props.onClick(key);\n    }\n  };\n\n  render() {\n    let { options, trigger, children, type, label, onClick } = this.props;\n    let overlay;\n    if (options instanceof Array) {\n      overlay = <Menu options={options} onClick={this.onClick} />;\n    } else {\n      overlay = options;\n    }\n    if (type === 'button') {\n      children = <Button>{label || 'Button'}</Button>;\n    }\n    return (\n      <AntDropdown\n        overlay={overlay}\n        trigger={[trigger]}\n        prefixCls={'ant-dropdown'}\n        onClick={onClick}\n      >\n        <div> {children} </div>\n      </AntDropdown>\n    );\n  }\n}\nexport default Dropdown;\n"]}