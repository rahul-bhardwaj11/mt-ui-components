{"version":3,"sources":["../../src/Dropdown/index.js"],"names":["Dropdown","onClick","props","key","options","trigger","children","type","label","getPopupContainer","overlay","Array","Component","propTypes","PropTypes","any","isRequired","string","node","func","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;IAEMA,Q;;;;;;;;;;;;;;gNAeJC,O,GAAU,eAAO;AACf,UAAI,MAAKC,KAAL,CAAWD,OAAf,EAAwB;AACtB,cAAKC,KAAL,CAAWD,OAAX,CAAmBE,GAAnB;AACD;AACF,K;;;;;6BAEQ;AAAA,mBASH,KAAKD,KATF;AAAA,UAELE,OAFK,UAELA,OAFK;AAAA,UAGLC,OAHK,UAGLA,OAHK;AAAA,UAILC,QAJK,UAILA,QAJK;AAAA,UAKLC,IALK,UAKLA,IALK;AAAA,UAMLC,KANK,UAMLA,KANK;AAAA,UAOLP,OAPK,UAOLA,OAPK;AAAA,UAQLQ,iBARK,UAQLA,iBARK;;AAUP,UAAIC,gBAAJ;AACA,UAAIN,mBAAmBO,KAAvB,EAA8B;AAC5BD,kBAAU,8BAAC,cAAD,IAAM,SAASN,OAAf,EAAwB,SAAS,KAAKH,OAAtC,GAAV;AACD,OAFD,MAEO;AACLS,kBAAUN,OAAV;AACD;AACD,UAAIG,SAAS,QAAb,EAAuB;AACrBD,mBAAW;AAAC,0BAAD;AAAA;AAASE,mBAAS;AAAlB,SAAX;AACD;AACD,aACE;AAAC,0BAAD;AAAA;AACE,mBAASE,OADX;AAEE,mBAAS,CAACL,OAAD,CAFX;AAGE,qBAAW,cAHb;AAIE,mBAASJ,OAJX;AAKE,6BAAmBQ;AALrB;AAOE;AAAA;AAAA;AAAA;AAAOH,kBAAP;AAAA;AAAA;AAPF,OADF;AAWD;;;EAnDoBM,gB;;AAAjBZ,Q,CACGa,S,GAAY;AACjBT,WAASU,oBAAUC,GAAV,CAAcC,UADN;AAEjBX,WAASS,oBAAUG,MAFF;AAGjBX,YAAUQ,oBAAUI,IAHH;AAIjBjB,WAASa,oBAAUK,IAJF;AAKjBZ,QAAMO,oBAAUG,MALC;AAMjBT,SAAOM,oBAAUG,MANA;AAOjBR,qBAAmBK,oBAAUK;AAPZ,C;AADfnB,Q,CAWGoB,Y,GAAe;AACpBf,WAAS;AADW,C;kBA0CTL,Q","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport AntDropdown from 'antd/lib/dropdown';\nimport Menu from '../Menu';\nimport 'antd/lib/dropdown/style/index.css';\nimport Button from 'antd/lib/button';\nimport 'antd/lib/button/style/index.css';\n\nclass Dropdown extends Component {\n  static propTypes = {\n    options: PropTypes.any.isRequired,\n    trigger: PropTypes.string,\n    children: PropTypes.node,\n    onClick: PropTypes.func,\n    type: PropTypes.string,\n    label: PropTypes.string,\n    getPopupContainer: PropTypes.func\n  };\n\n  static defaultProps = {\n    trigger: 'hover'\n  };\n\n  onClick = key => {\n    if (this.props.onClick) {\n      this.props.onClick(key);\n    }\n  };\n\n  render() {\n    let {\n      options,\n      trigger,\n      children,\n      type,\n      label,\n      onClick,\n      getPopupContainer\n    } = this.props;\n    let overlay;\n    if (options instanceof Array) {\n      overlay = <Menu options={options} onClick={this.onClick} />;\n    } else {\n      overlay = options;\n    }\n    if (type === 'button') {\n      children = <Button>{label || 'Button'}</Button>;\n    }\n    return (\n      <AntDropdown\n        overlay={overlay}\n        trigger={[trigger]}\n        prefixCls={'ant-dropdown'}\n        onClick={onClick}\n        getPopupContainer={getPopupContainer}\n      >\n        <div> {children} </div>\n      </AntDropdown>\n    );\n  }\n}\nexport default Dropdown;\n"]}