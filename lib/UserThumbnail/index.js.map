{"version":3,"sources":["../../src/UserThumbnail/index.js"],"names":["MtUserThumbnail","div","blackText","smallDarkLink","UserThumbnail","getInitials","initials","name","match","shift","pop","toUpperCase","props","email","size","mtProps","icon","propTypes","string","src","shape","oneOf","defaultProps","Avatar"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;AAEA,IAAMA,kBAAkB,2BAAOC,GAAzB,kBAQE,iBAAMC,SAAN,EARF,EAYE,iBAAMC,aAAN,EAZF,CAAN;;IAiBMC,a;;;;;;;;;;;;;;0NAeJC,W,GAAc,gBAAQ;AACpB,UAAIC,WAAWC,KAAKC,KAAL,CAAW,OAAX,KAAuB,EAAtC;AACAF,iBAAW,CACT,CAACA,SAASG,KAAT,MAAoB,EAArB,KAA4BH,SAASI,GAAT,MAAkB,EAA9C,CADS,EAETC,WAFS,EAAX;AAGA,aAAOL,QAAP;AACD,K;;;;;6BAEQ;AAAA,mBACuB,KAAKM,KAD5B;AAAA,UACCL,IADD,UACCA,IADD;AAAA,UACOM,KADP,UACOA,KADP;AAAA,UACcC,IADd,UACcA,IADd;;AAEP,UAAIC,UAAU,sBAAc,EAAd,EAAkB,KAAKH,KAAvB,CAAd;AACAG,gBAAU,CAACR,IAAD,GAAQ,sBAAcQ,OAAd,EAAuB,EAAEC,MAAM,MAAR,EAAvB,CAAR,GAAmDD,OAA7D;AACA,aACE;AAAC,uBAAD;AAAA;AACE;AAAA;AAAYA,iBAAZ;AAAsBR,kBAAQ,KAAKF,WAAL,CAAiBE,IAAjB;AAA9B,SADF;AAEGO,iBAAS,OAAT,IACC;AAAA;AAAA,YAAK,WAAU,SAAf;AACGP,kBAAQ;AAAA;AAAA,cAAK,WAAW,MAAhB;AAAyBA;AAAzB,WADX;AAEGM,mBAAS;AAAA;AAAA,cAAK,WAAW,OAAhB;AAA0BA;AAA1B;AAFZ;AAHJ,OADF;AAWD;;;;;AAtCGT,a,CACGa,S,GAAY;AACjBV,QAAM,oBAAUW,MADC;AAEjBL,SAAO,oBAAUK,MAFA;AAGjBC,OAAK,oBAAUD,MAHE;AAIjBE,SAAO,oBAAUC,KAAV,CAAgB,CAAC,QAAD,EAAW,QAAX,CAAhB,CAJU;AAKjBP,QAAM,oBAAUI,MALC;AAMjBF,QAAM,oBAAUE;AANC,C;AADfd,a,CAUGkB,Y,GAAe;AACpBF,SAAO,QADa;AAEpBN,QAAM;AAFc,C;QA+BfS,M;kBAEMnB,a","file":"index.js","sourcesContent":["import styled from 'styled-components';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from 'antd/lib/avatar';\nimport 'antd/lib/avatar/style/index.css';\nimport mixin from '../styles/mixins';\n\nconst MtUserThumbnail = styled.div`\n  display: inline-block;\n\n  .content {\n    display: inline-block;\n    vertical-align: middle;\n    margin-left: 16px;\n    .name {\n      ${mixin.blackText()};\n      line-height: 22px;\n    }\n    .email {\n      ${mixin.smallDarkLink()};\n      line-height: 17px;\n    }\n  }\n`;\nclass UserThumbnail extends Component {\n  static propTypes = {\n    name: PropTypes.string,\n    email: PropTypes.string,\n    src: PropTypes.string,\n    shape: PropTypes.oneOf(['circle', 'square']),\n    size: PropTypes.string,\n    icon: PropTypes.string\n  };\n\n  static defaultProps = {\n    shape: 'circle',\n    size: 'large'\n  };\n\n  getInitials = name => {\n    var initials = name.match(/\\b\\w/g) || [];\n    initials = (\n      (initials.shift() || '') + (initials.pop() || '')\n    ).toUpperCase();\n    return initials;\n  };\n\n  render() {\n    const { name, email, size } = this.props;\n    let mtProps = Object.assign({}, this.props);\n    mtProps = !name ? Object.assign(mtProps, { icon: 'user' }) : mtProps;\n    return (\n      <MtUserThumbnail>\n        <Avatar {...mtProps}>{name && this.getInitials(name)}</Avatar>\n        {size === 'large' && (\n          <div className=\"content\">\n            {name && <div className={'name'}>{name}</div>}\n            {email && <div className={'email'}>{email}</div>}\n          </div>\n        )}\n      </MtUserThumbnail>\n    );\n  }\n}\n\nexport { Avatar };\n\nexport default UserThumbnail;\n"]}