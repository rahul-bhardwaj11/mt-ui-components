{"version":3,"sources":["../../src/Menu/index.js"],"names":["MtMenu","styled","div","theme","colors","LIGHT_BLUE","Menu","onClick","key","props","options","children","map","option","index","content","Component","propTypes","PropTypes","array","func","mode","string","node","prefixCls","ItemGroup","AntMenu","SubMenu","Item"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,SAASC,2BAAOC,GAAhB,kBAEkBC,gBAAMC,MAAN,CAAaC,UAF/B,EAMkBF,gBAAMC,MAAN,CAAaC,UAN/B,EAwD2BF,gBAAMC,MAAN,CAAaC,UAxDxC,CAAN;;IAoFMC,I;;;;;;;;;;;;;;wMASJC,O,GAAU,iBAAa;AAAA,UAAVC,GAAU,SAAVA,GAAU;;AACrB,UAAI,MAAKC,KAAL,CAAWF,OAAf,EAAwB;AACtB,cAAKE,KAAL,CAAWF,OAAX,CAAmBC,GAAnB;AACD;AACF,K;;;;;6BAEQ;AAAA,mBACqB,KAAKC,KAD1B;AAAA,UACDC,OADC,UACDA,OADC;AAAA,UACQC,QADR,UACQA,QADR;;AAEP,aACE;AAAC,cAAD;AAAA;AACE;AAAC,wBAAD;AAAA,qCAAa,KAAKF,KAAlB,IAAyB,SAAS,KAAKF,OAAvC;AACG,WAACG,OAAD,IAAYC,QADf;AAEGD,qBACCA,QAAQE,GAAR,CAAY,UAACC,MAAD,EAASC,KAAT,EAAmB;AAC7B,mBACE;AAAC,4BAAD,CAAS,IAAT;AAAA,gBAAc,KAAKD,OAAOL,GAAP,IAAcM,KAAjC;AACG,qBAAOD,OAAOE,OAAd,KAA0B,QAA1B,GACC,8BAAC,sBAAD,IAAc,SAASF,OAAOE,OAA9B,GADD,GAGCF,OAAOE;AAJX,aADF;AASD,WAVD;AAHJ;AADF,OADF;AAmBD;;;EApCgBC,gB;;AAAbV,I,CACGW,S,GAAY;AACjBP,WAASQ,oBAAUC,KADF;AAEjBZ,WAASW,oBAAUE,IAFF;AAGjBC,QAAMH,oBAAUI,MAHC;AAIjBX,YAAUO,oBAAUK,IAJH;AAKjBC,aAAWN,oBAAUI;AALJ,C;;;AAsCrBhB,KAAKmB,SAAL,GAAiBC,eAAQD,SAAzB;AACAnB,KAAKqB,OAAL,GAAeD,eAAQC,OAAvB;AACArB,KAAKsB,IAAL,GAAYF,eAAQE,IAApB;kBACetB,I","file":"index.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport AntMenu from \"antd/lib/menu\";\nimport \"antd/lib/menu/style/index.css\";\nimport StringToHTML from \"../StringToHTML\";\nimport styled from \"styled-components\";\nimport theme from \"../theme\";\n\nconst MtMenu = styled.div`\n  .ant-select-dropdown-menu-item {\n    background-color: ${theme.colors.LIGHT_BLUE};\n    color: #fff;\n  }\n  .ant-select-dropdown {\n    background-color: ${theme.colors.LIGHT_BLUE};\n    color: #fff;\n  }\n  .ant-select-dropdown-menu {\n    background-color: #fff;\n    color: #888;\n    padding: 0px 5px;\n    margin: 8px;\n    border-radius: 4px;\n    height: 32px;\n    line-height: 32px;\n  }\n  .ant-dropdown-menu-submenu-title {\n    -webkit-transition: all 0.2s;\n    transition: all 0.2s;\n    &:hover {\n      background-color: #4a90e2;\n      color: #fff;\n    }\n  }\n  .ant-dropdown-menu-item {\n    background-color: #fff;\n    color: #989ca6;\n    padding: 0px 15px;\n    margin: 8px;\n    border-radius: 4px;\n    height: 32px;\n    line-height: 32px;\n    -webkit-transition: all 0.2s;\n    transition: all 0.2s;\n    &:hover {\n      background-color: #4a90e2;\n      color: #fff;\n    }\n  }\n  .ant-menu-horizontal {\n    & > .ant-menu-item {\n      &:hover {\n        color: #202a39;\n      }\n    }\n    & > .ant-menu-submenu {\n      &:hover {\n        color: #202a39;\n      }\n    }\n    & > .ant-menu-item-active,\n    & > .ant-menu-submenu-active,\n    & > .ant-menu-item-selected,\n    & > .ant-menu-submenu-selected {\n      border-bottom: 3px solid ${theme.colors.LIGHT_BLUE};\n      color: #202a39;\n    }\n  }\n  .ant-menu-vertical {\n    & > .ant-menu-item {\n      color: #8e9194;\n      &:hover {\n        color: black;\n      }\n    }\n  }\n  .ant-menu-item {\n    font-size: 15px;\n    padding: 0px 8px;\n    color: #8e9194;\n    &:hover {\n      color: #fff;\n    }\n    b {\n      font-weight: normal;\n    }\n  }\n  .ant-dropdown-trigger {\n    font-size: 13px;\n  }\n`;\n\nclass Menu extends Component {\n  static propTypes = {\n    options: PropTypes.array,\n    onClick: PropTypes.func,\n    mode: PropTypes.string,\n    children: PropTypes.node,\n    prefixCls: PropTypes.string\n  };\n\n  onClick = ({ key }) => {\n    if (this.props.onClick) {\n      this.props.onClick(key);\n    }\n  };\n\n  render() {\n    let { options, children } = this.props;\n    return (\n      <MtMenu>\n        <AntMenu {...this.props} onClick={this.onClick}>\n          {!options && children}\n          {options &&\n            options.map((option, index) => {\n              return (\n                <AntMenu.Item key={option.key || index}>\n                  {typeof option.content === \"string\" ? (\n                    <StringToHTML content={option.content} />\n                  ) : (\n                    option.content\n                  )}\n                </AntMenu.Item>\n              );\n            })}\n        </AntMenu>\n      </MtMenu>\n    );\n  }\n}\n\nMenu.ItemGroup = AntMenu.ItemGroup;\nMenu.SubMenu = AntMenu.SubMenu;\nMenu.Item = AntMenu.Item;\nexport default Menu;\n"]}