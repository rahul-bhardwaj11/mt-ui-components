{"version":3,"sources":["../../src/SelectWithSearch/asyncSelect.js"],"names":["initialCache","options","hasMore","isLoading","AsyncSelect","props","initialOptionsCache","state","search","optionsCache","selectedItems","showSelectedValues","menuIsOpen","showButton","showInput","inputValue","oldProps","cacheUniq","setState","currentOptions","prevState","loadOptions","__loadOptions","concat","isMulti","normalizeOption","selectProps","onChange","onCheckboxClick","hideSelectedOptions","components","Option","optionWithCheckBox","MultiValueContainer","handleDisplayValue","Menu","buildMenu","Control","handleControl","value","closeMenuOnSelect","controlShouldRenderValue","isSearchable","autoFocus","onBlur","onDone","Input","handleInput","backspaceRemovesValue","toggleButton","getButtonText","onInputChange","onMenuOpen","onMenuScrollToBottom","Component","propTypes","promiseOption","PropTypes","func","any","pageSize","number","array","multiple","bool","defaultValue","oneOfType","object","isButton","buttonLabel","string","defaultProps","event","action","__arrangeOptions","optionsThatAreNotSelected","filter","indexOf","option","newOptions","prevOptions","offset","length","then","resolve","componentDidMount","map","push","arrangedOptions","index","data","splice","onClearAll","selectedValues","selectedItem","newState","updatedState","setTimeout","label","isDisabled","children","arg","isHidden","unshift","selectedItemsLength"],"mappings":"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","file":"asyncSelect.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../Button';\nimport CheckBox from '../CheckBox';\nimport Icon from '../Icon';\nimport Select, { components } from 'react-select';\n\nconst initialCache = {\n  options: [],\n  hasMore: true,\n  isLoading: false\n};\n\nexport default class AsyncSelect extends Component {\n  static propTypes = {\n    promiseOption: PropTypes.func,\n    cacheUniq: PropTypes.any,\n    pageSize: PropTypes.number,\n    options: PropTypes.array,\n    multiple: PropTypes.bool,\n    defaultValue: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    isMulti: PropTypes.bool,\n    onChange: PropTypes.func,\n    isButton: PropTypes.bool,\n    buttonLabel: PropTypes.string\n  };\n\n  static defaultProps = {\n    cacheUniq: null,\n    pageSize: 10,\n    isButton: false,\n    buttonLabel: 'filter'\n  };\n\n  constructor(props) {\n    super(props);\n    const initialOptionsCache = props.options\n      ? {\n        '': {\n          isLoading: false,\n          options: props.options || [],\n          hasMore: true\n        }\n      }\n      : {};\n    this.state = {\n      search: '',\n      optionsCache: initialOptionsCache,\n      selectedItems: [],\n      showSelectedValues: true,\n      menuIsOpen: false,\n      showButton: false,\n      showInput: false,\n      inputValue: ''\n    };\n  }\n\n  componentDidUpdate(oldProps) {\n    const { cacheUniq } = this.props;\n\n    if (oldProps.cacheUniq !== cacheUniq) {\n      this.setState({\n        optionsCache: {}\n      });\n    }\n  }\n\n  onInputChange = (search, event) => {\n    if (event.action == 'input-change') {\n      this.setState({\n        inputValue: search,\n        search\n      });\n    }\n\n    const { optionsCache } = this.state;\n\n    if (!optionsCache[search]) {\n      this.loadOptions();\n    }\n  };\n\n  onMenuScrollToBottom = async () => {\n    const { search, optionsCache } = this.state;\n\n    const currentOptions = optionsCache[search];\n\n    if (currentOptions) {\n      await this.loadOptions();\n    }\n  };\n\n  async loadOptions() {\n    const { search, optionsCache } = this.state;\n\n    const currentOptions = optionsCache[search] || initialCache;\n\n    if (currentOptions.isLoading || !currentOptions.hasMore) {\n      return;\n    }\n\n    await this.setState(prevState => ({\n      search,\n      optionsCache: {\n        ...prevState.optionsCache,\n        [search]: {\n          ...currentOptions,\n          isLoading: true\n        }\n      }\n    }));\n\n    try {\n      const loadOptions = this.__loadOptions;\n\n      const { options, hasMore } = await loadOptions(\n        search,\n        currentOptions.options\n      );\n\n      await this.setState(prevState => ({\n        optionsCache: {\n          ...prevState.optionsCache,\n          [search]: {\n            ...currentOptions,\n            options: currentOptions.options.concat(options),\n            hasMore: !!hasMore,\n            isLoading: false\n          }\n        }\n      }));\n    } catch (e) {\n      await this.setState(prevState => ({\n        optionsCache: {\n          ...prevState.optionsCache,\n          [search]: {\n            ...currentOptions,\n            isLoading: false\n          }\n        }\n      }));\n    }\n  }\n\n  __arrangeOptions = (selectedItems, options) => {\n    const optionsThatAreNotSelected = options.filter(option => {\n      return selectedItems.indexOf(option) < 0;\n    });\n    const newOptions = [...selectedItems, ...optionsThatAreNotSelected];\n    return newOptions;\n  };\n\n  __loadOptions = (search, prevOptions) => {\n    let { promiseOption, pageSize } = this.props;\n    return new Promise(resolve => {\n      let offset = prevOptions.length;\n      promiseOption({ search, offset, pageSize }).then(options => {\n        resolve({ options, hasMore: options.length === pageSize });\n      }, {});\n    });\n  };\n\n  componentDidMount = async () => {\n    const { defaultValue, isButton } = this.props;\n    const { optionsCache, search } = this.state;\n    const currentOptions = optionsCache[search] || initialCache;\n    if (isButton) {\n      this.setState({ showButton: true });\n    }\n    const selectedItems = [];\n    if (defaultValue) {\n      if (defaultValue.length) {\n        defaultValue.map(option => {\n          selectedItems.push(option);\n        });\n      } else {\n        selectedItems.push(defaultValue);\n      }\n    }\n\n    const arrangedOptions = this.__arrangeOptions(\n      selectedItems,\n      currentOptions.options\n    );\n    this.setState(prevState => ({\n      selectedItems,\n      optionsCache: {\n        ...prevState.optionsCache,\n        [search]: {\n          isLoading: false,\n          options: arrangedOptions,\n          hasMore: true\n        }\n      }\n    }));\n    if (!optionsCache[''] || optionsCache[''].hasMore) {\n      await this.loadOptions();\n    }\n  };\n\n  onCheckboxClick = data => {\n    const selectedItems = [...this.state.selectedItems];\n    let index = selectedItems.indexOf(data);\n    if (index < 0) {\n      selectedItems.push(data);\n    } else {\n      selectedItems.splice(index, 1);\n    }\n    this.setState({ selectedItems });\n  };\n\n  onClearAll = () => {\n    const selectedItems = [];\n    this.setState({ selectedItems });\n  };\n\n  onDone = () => {\n    const { selectedItems, optionsCache } = this.state;\n    const { isButton, onChange } = this.props;\n    const options = optionsCache[''].options;\n    const selectedValues = selectedItems.map(selectedItem => {\n      return selectedItem.value;\n    });\n    onChange(selectedValues);\n    const arrangedOptions = this.__arrangeOptions(selectedItems, options);\n    this.setState(prevState => {\n      let newState = {\n        menuIsOpen: false,\n        showSelectedValues: true,\n        showInput: false,\n        inputValue: '',\n        optionsCache: {\n          ...prevState.optionsCache,\n          '': {\n            ...prevState.optionsCache[''],\n            options: arrangedOptions\n          }\n        }\n      };\n      newState = isButton ? Object.assign(newState, { showButton: true }) : newState;\n      return newState;\n    });\n  };\n\n  toggleButton = () => {\n    this.setState(prevState => {\n      let updatedState = {\n        showButton: !prevState.showButton,\n        menuIsOpen: !prevState.menuIsOpen,\n        showSelectedValues: !prevState.showSelectedValues\n      };\n      updatedState = (!this.props.isButton) ? { showInput: !prevState.showInput } : updatedState;\n      return updatedState;\n    }\n    );\n    setTimeout(() => {\n      this.props.isButton && this.setState({\n        showInput: !this.state.showInput\n      })\n    }, 0);\n  };\n\n  handleDisplayValue = ({ data }) => {\n    const { selectedItems } = this.state;\n    if (data.value == selectedItems[0].value)\n      return (\n        <div className=\"selectedItem\">{`${data.label}${\n          selectedItems.length > 1 ? `+${selectedItems.length - 1}` : ''\n          }`}</div>\n      );\n    return null;\n  };\n\n  optionWithCheckBox = ({ isDisabled, data }) => {\n    const { selectedItems } = this.state;\n    return !isDisabled ? (\n      <div\n        onClick={() => this.onCheckboxClick(data)}\n        className=\"checkboxWrapper\"\n      >\n        <CheckBox checked={selectedItems.indexOf(data) > -1 ? true : false} />\n        <span className=\"dataLabel\">{data.label}</span>\n      </div>\n    ) : null;\n  };\n\n  buildMenu = props => {\n    const { selectedItems } = this.state;\n    return (\n      <components.Menu {...props}>\n        {props.children}\n        <div className=\"componentWrapper\">\n          <div className=\"buttonWrapperL\">\n            <Button type=\"text\" onClick={this.onClearAll}>\n              {'Clear All'}\n            </Button>\n          </div>\n\n          <div className=\"buttonWrapperR\">\n            <Button type=\"text\" onClick={this.onDone}>\n              {`Done`}\n              <span className=\"doneMarginR\">\n                {selectedItems.length ? `(${selectedItems.length})` : ''}\n              </span>\n            </Button>\n          </div>\n        </div>\n      </components.Menu>\n    );\n  };\n\n  handleControl = arg => {\n    return (\n      <div className=\"selectBoxWrapper\">\n        <div\n          className={this.state.showInput ? 'activeSearch' : ''}\n          onClick={() => {\n            this.setState({\n              menuIsOpen: true,\n              showInput: true,\n              showSelectedValues: false\n            });\n          }}\n        >\n          <components.Control {...arg} />\n        </div>\n      </div>\n    );\n  };\n\n  handleInput = props => {\n    if (props.isHidden) {\n      return <components.Input {...props} />;\n    }\n    return (\n      <div className={props.value.length ? 'activeInput' : ''}>\n        <components.Input {...props} />\n        <Icon type=\"Cancel\" onClick={() => this.setState({ inputValue: '' })} />\n      </div>\n    );\n  };\n\n  normalizeOption = options => {\n    if (!this.props.isMulti && !this.state.search.length) {\n      options.unshift({ label: \"None\", value: \"None\" })\n    }\n    return options;\n  };\n\n  getButtonText = () => {\n    const { selectedItems } = this.state;\n    const { buttonLabel } = this.props;\n    const selectedItemsLength = selectedItems.length;\n    if (selectedItemsLength) {\n      if (selectedItemsLength == 1) return `${selectedItems[0].label}`;\n      return `${buttonLabel}.${selectedItems.length}`;\n    }\n    return buttonLabel;\n  };\n\n  render() {\n    const {\n      search,\n      optionsCache,\n      selectedItems,\n      showSelectedValues,\n      menuIsOpen,\n      showButton,\n      showInput,\n      inputValue\n    } = this.state;\n    const { isMulti } = this.props;\n    let currentOptions = optionsCache[search] || initialCache;\n    const options = this.normalizeOption([...currentOptions.options]);\n    const selectProps = isMulti\n      ? {\n        onChange: this.onCheckboxClick,\n        hideSelectedOptions: false,\n        components: {\n          Option: this.optionWithCheckBox,\n          MultiValueContainer: this.handleDisplayValue,\n          Menu: this.buildMenu,\n          Control: this.handleControl\n        },\n        value: selectedItems,\n        closeMenuOnSelect: false,\n        controlShouldRenderValue: showSelectedValues,\n        menuIsOpen: menuIsOpen,\n        isSearchable: showInput,\n        autoFocus: showInput,\n        onBlur: this.onDone,\n        inputValue: inputValue\n      }\n      : {\n        components: {\n          Control: this.handleControl,\n          Input: this.handleInput\n        },\n        onChange: value => {\n          this.setState({ showInput: false });\n          this.props.onChange(value);\n        },\n        onBlur: () => this.setState({ showInput: false }),\n        backspaceRemovesValue: false\n      };\n\n\n\n    if (showButton) {\n      return (\n        <Button onClick={this.toggleButton} type=\"primary\">\n          {this.getButtonText()}\n        </Button>\n      );\n    }\n\n    return (\n      <Select\n        {...this.props}\n        classNamePrefix={'mt-react-select'}\n        onInputChange={this.onInputChange}\n        isLoading={currentOptions.isLoading}\n        options={options}\n        onMenuOpen={this.onMenuOpen}\n        autoload={false}\n        onMenuScrollToBottom={this.onMenuScrollToBottom}\n        {...selectProps}\n      />\n    );\n  }\n}\n"]}