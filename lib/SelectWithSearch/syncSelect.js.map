{"version":3,"sources":["../../src/SelectWithSearch/syncSelect.js"],"names":["noop","undefined","SyncSelect","state","options","props","selectedItems","menuIsOpen","showSelect","showInput","inputValue","handleClickOutside","buttonRef","contains","event","target","isBlurActive","normalizeOption","isMulti","sortedOptions","unshift","label","value","__sortOptions","optionsToSort","filter","indexOf","option","sort","item1","item2","onCheckboxClick","index","data","push","splice","setState","onClearAll","onDone","isButton","onChange","selectedValues","map","selectedItem","newState","toggleButton","prevState","handleDisplayValue","length","handleSingleValue","placeholder","optionWithCheckBox","params","isDisabled","buildMenu","children","handleControl","arg","onInputChange","input","action","getButtonText","buttonLabel","selectedItemsLength","defaultValue","document","addEventListener","removeEventListener","nextProps","buttonSize","selectProps","hideSelectedOptions","components","Option","MultiValueContainer","Menu","Control","closeMenuOnSelect","controlShouldRenderValue","isSearchable","autoFocus","autosize","onBlur","SingleValue","backspaceRemovesValue","e","Component","propTypes","PropTypes","arrayOf","object","oneOfType","array","bool","func","string","defaultProps"],"mappings":"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","file":"syncSelect.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Select, { components } from 'react-select';\nimport CheckBox from '../CheckBox';\nimport Button from '../Button';\nimport Icon from '../Icon';\n\nconst noop = () => undefined;\n\nexport default class SyncSelect extends Component {\n  static propTypes = {\n    options: PropTypes.arrayOf(PropTypes.object),\n    defaultValue: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    isMulti: PropTypes.bool,\n    onChange: PropTypes.func,\n    isButton: PropTypes.bool,\n    buttonLabel: PropTypes.string,\n    placeholder: PropTypes.string,\n    buttonSize: PropTypes.string\n  };\n\n  static defaultProps = {\n    buttonLabel: 'filter',\n    onChange: noop\n  };\n\n  state = {\n    options: this.props.options,\n    selectedItems: [],\n    menuIsOpen: false,\n    showSelect: true,\n    showInput: false,\n    inputValue: ''\n  };\n\n  componentDidMount() {\n    const { defaultValue, isButton, options } = this.props;\n    if (isButton) {\n      this.setState({ showSelect: false });\n    }\n    const selectedItems = [];\n    if (defaultValue) {\n      if (defaultValue.length) {\n        defaultValue.map(option => {\n          selectedItems.push(option);\n        });\n      } else {\n        selectedItems.push(defaultValue);\n      }\n    }\n    let sortedOptions = this.__sortOptions(options, selectedItems);\n    sortedOptions = this.normalizeOption(sortedOptions);\n    this.setState({ selectedItems, options: sortedOptions });\n    document.addEventListener('mousedown', this.handleClickOutside);\n  }\n\n  handleClickOutside = event => {\n    if (this.buttonRef && this.buttonRef.contains(event.target)) {\n      this.isBlurActive = false;\n    }\n  };\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside);\n  }\n\n  normalizeOption = sortedOptions => {\n    const { isMulti } = this.props;\n    if (!isMulti) {\n      sortedOptions.unshift({ label: 'None', value: 'None' });\n    }\n    return sortedOptions;\n  };\n  componentWillReceiveProps(nextProps) {\n    if (this.props.options != nextProps.options) {\n      let sortedOptions = this.__sortOptions(nextProps.options);\n      sortedOptions = this.normalizeOption(sortedOptions);\n      this.setState({ options: sortedOptions });\n    }\n  }\n\n  __sortOptions = (options, selectedItems = []) => {\n    const optionsToSort = options.filter(option => {\n      return selectedItems.indexOf(option) < 0;\n    });\n    optionsToSort.sort((item1, item2) => {\n      return item1.label > item2.label;\n    });\n    const sortedOptions = [...selectedItems, ...optionsToSort];\n    return sortedOptions;\n  };\n\n  onCheckboxClick = data => {\n    const selectedItems = [...this.state.selectedItems];\n    let index = selectedItems.indexOf(data);\n    if (index < 0) {\n      selectedItems.push(data);\n    } else {\n      selectedItems.splice(index, 1);\n    }\n    this.setState({ selectedItems });\n  };\n\n  onClearAll = () => {\n    const selectedItems = [];\n    this.setState({ selectedItems });\n  };\n\n  onDone = () => {\n    this.isBlurActive = true;\n    const { selectedItems, options } = this.state;\n    const { isButton, onChange } = this.props;\n    const selectedValues = selectedItems.map(selectedItem => {\n      return selectedItem.value;\n    });\n    onChange(selectedValues);\n    const sortedOptions = this.__sortOptions(options, selectedItems);\n    let newState = {\n      options: sortedOptions,\n      menuIsOpen: false,\n      showInput: false,\n      inputValue: ''\n    };\n    newState = isButton\n      ? Object.assign(newState, { showSelect: false })\n      : newState;\n    this.setState({ ...newState });\n  };\n\n  toggleButton = () => {\n    if (this.isBlurActive) {\n      this.isBlurActive = false;\n      return;\n    }\n    this.setState(prevState => ({\n      showSelect: !prevState.showSelect,\n      menuIsOpen: !prevState.menuIsOpen,\n      showInput: !prevState.showInput\n    }));\n  };\n\n  handleDisplayValue = ({ data }) => {\n    const { selectedItems } = this.state;\n    if (data.value == selectedItems[0].value)\n      return (\n        <div className=\"selectedItem clearfix\">\n          <span className=\"selectedItemLabel floatL\">{`${data.label}`}</span>\n          <span className=\"floatL\">{`${\n            selectedItems.length > 1 ? `+${selectedItems.length - 1}` : ''\n            }`}</span>\n        </div>\n      );\n    return null;\n  };\n\n  handleSingleValue = ({ data, ...props }) => {\n    const { placeholder } = this.props;\n    return (\n      <components.SingleValue {...props}>\n        {data.value == 'None' ? placeholder : data.label}\n      </components.SingleValue>\n    );\n  };\n\n  optionWithCheckBox = (params) => {\n    const { isDisabled, data } = params;\n    const { selectedItems } = this.state;\n    if (!this.props.isMulti)\n      return (\n        <div title={data.label}>\n          <components.Option {...params} />\n        </div>\n      );\n    return !isDisabled ? (\n      <div\n        onClick={() => this.onCheckboxClick(data)}\n        className=\"checkboxWrapper\"\n        title={data.label}\n      >\n        <CheckBox checked={selectedItems.indexOf(data) > -1} />\n        <span className=\"dataLabel\">{data.label}</span>\n      </div>\n    ) : null;\n  };\n\n  buildMenu = props => {\n    const { selectedItems } = this.state;\n    return (\n      <components.Menu {...props}>\n        {props.children}\n        <div className=\"componentWrapper\">\n          <div className=\"buttonWrapperL\">\n            <Button type=\"text\" onClick={this.onClearAll}>\n              {'Clear All'}\n            </Button>\n          </div>\n          <div className=\"buttonWrapperR\">\n            <Button type=\"text\" onClick={this.onDone}>\n              <span className=\"marginR5\"> Done</span>\n              {`${selectedItems.length ? `(${selectedItems.length})` : ''}`}\n            </Button>\n          </div>\n        </div>\n      </components.Menu>\n    );\n  };\n\n  handleControl = arg => {\n    const { inputValue, showInput } = this.state;\n    return (\n      <div className=\"selectBoxWrapper\">\n        <div\n          className={showInput ? 'activeSearch' : ''}\n          onClick={() => {\n            this.setState({\n              menuIsOpen: true,\n              showInput: true\n            });\n          }}\n        >\n          <components.Control {...arg} />\n          <div className={inputValue.length ? 'activeInput' : ''}>\n            <Icon\n              type=\"cross\"\n              onClick={() => this.setState({ inputValue: '' })}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  onInputChange = (input, event) => {\n    if (event.action == 'input-change') this.setState({ inputValue: input });\n  };\n\n  getButtonText = () => {\n    const { selectedItems } = this.state;\n    const { buttonLabel } = this.props;\n    const selectedItemsLength = selectedItems.length;\n    if (selectedItemsLength) {\n      if (selectedItemsLength == 1) return `${selectedItems[0].label}`;\n      return `${buttonLabel}.${selectedItems.length}`;\n    }\n    return buttonLabel;\n  };\n\n  render() {\n    const { isMulti, isButton, buttonSize } = this.props;\n    const {\n      options,\n      selectedItems,\n      menuIsOpen,\n      showSelect,\n      showInput,\n      inputValue\n    } = this.state;\n    const selectProps = isMulti\n      ? {\n        onChange: this.onCheckboxClick,\n        hideSelectedOptions: false,\n        components: {\n          Option: this.optionWithCheckBox,\n          MultiValueContainer: this.handleDisplayValue,\n          Menu: this.buildMenu,\n          Control: this.handleControl\n        },\n        value: selectedItems,\n        closeMenuOnSelect: false,\n        controlShouldRenderValue: !showInput,\n        menuIsOpen: menuIsOpen,\n        isSearchable: showInput,\n        autoFocus: showInput,\n        autosize: false,\n        onBlur: this.onDone,\n        inputValue: inputValue,\n        onInputChange: this.onInputChange\n      }\n      : {\n        components: {\n          Option: this.optionWithCheckBox,\n          Control: this.handleControl,\n          SingleValue: this.handleSingleValue\n        },\n        onChange: value => {\n          this.setState({ showInput: false });\n          this.props.onChange(value);\n        },\n        onBlur: () => this.setState({ showInput: false }),\n        autoFocus: showInput,\n        backspaceRemovesValue: false,\n        inputValue: inputValue,\n        onInputChange: this.onInputChange,\n        controlShouldRenderValue: !showInput\n      };\n\n    return (\n      <div>\n        {isButton && (\n          <div\n            ref={e => {\n              if (e) {\n                this.buttonRef = e;\n              }\n            }}\n          >\n            <Button type=\"secondary\" onClick={this.toggleButton} size={buttonSize}>\n              {this.getButtonText()}\n            </Button>\n          </div>\n        )}\n        {showSelect && (\n          <Select\n            {...this.props}\n            options={options}\n            classNamePrefix={'mt-react-select'}\n            {...selectProps}\n          />\n        )}\n      </div>\n    );\n  }\n}\n"]}