{"version":3,"sources":["../../src/SelectWithSearch/syncSelect.js"],"names":["noop","undefined","SyncSelect","state","options","props","selectedItems","showSelectedValues","menuIsOpen","showButton","showInput","inputValue","normalizeOption","isMulti","sortedOptions","unshift","label","value","__sortOptions","optionsToSort","filter","indexOf","option","sort","item1","item2","onCheckboxClick","index","data","push","splice","setState","onClearAll","onDone","isButton","onChange","selectedValues","map","selectedItem","newState","toggleButton","updatedState","prevState","setTimeout","handleDisplayValue","length","optionWithCheckBox","isDisabled","buildMenu","children","handleControl","arg","handleInput","isHidden","onInputChange","input","event","action","getButtonText","buttonLabel","selectedItemsLength","defaultValue","nextProps","selectProps","hideSelectedOptions","components","Option","MultiValueContainer","Menu","Control","Input","closeMenuOnSelect","controlShouldRenderValue","isSearchable","autoFocus","onBlur","backspaceRemovesValue","Component","propTypes","PropTypes","arrayOf","object","oneOfType","array","bool","func","string","defaultProps"],"mappings":"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","file":"syncSelect.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Select, { components } from 'react-select';\nimport CheckBox from '../CheckBox';\nimport Button from '../Button';\nimport Icon from '../Icon';\n\nconst noop = () => undefined;\n\nexport default class SyncSelect extends Component {\n  static propTypes = {\n    options: PropTypes.arrayOf(PropTypes.object),\n    defaultValue: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    isMulti: PropTypes.bool,\n    onChange: PropTypes.func,\n    isButton: PropTypes.bool,\n    buttonLabel: PropTypes.string\n  };\n\n  static defaultProps = {\n    buttonLabel: 'filter',\n    onChange: noop\n  };\n\n  state = {\n    options: this.props.options,\n    selectedItems: [],\n    showSelectedValues: true,\n    menuIsOpen: false,\n    showButton: false,\n    showInput: false,\n    inputValue: ''\n  };\n\n  componentDidMount() {\n    const { defaultValue, isButton, options } = this.props;\n    if (isButton) {\n      this.setState({ showButton: true });\n    }\n    const selectedItems = [];\n    if (defaultValue) {\n      if (defaultValue.length) {\n        defaultValue.map(option => {\n          selectedItems.push(option);\n        });\n      } else {\n        selectedItems.push(defaultValue);\n      }\n    }\n    let sortedOptions = this.__sortOptions(options, selectedItems);\n    sortedOptions = this.normalizeOption(sortedOptions);\n    this.setState({ selectedItems, options: sortedOptions });\n  }\n\n  normalizeOption = sortedOptions => {\n    if (!this.props.isMulti) {\n      sortedOptions.unshift({ label: 'None', value: 'None' });\n    }\n    return sortedOptions;\n  };\n  componentWillReceiveProps(nextProps) {\n    if (this.props.options != nextProps.options) {\n      let sortedOptions = this.__sortOptions(nextProps.options);\n      sortedOptions = this.normalizeOption(sortedOptions);\n      this.setState({ options: sortedOptions });\n    }\n  }\n\n  __sortOptions = (options, selectedItems = []) => {\n    const optionsToSort = options.filter(option => {\n      return selectedItems.indexOf(option) < 0;\n    });\n    optionsToSort.sort((item1, item2) => {\n      return item1.label > item2.label;\n    });\n    const sortedOptions = [...selectedItems, ...optionsToSort];\n    return sortedOptions;\n  };\n\n  onCheckboxClick = data => {\n    const selectedItems = [...this.state.selectedItems];\n    let index = selectedItems.indexOf(data);\n    if (index < 0) {\n      selectedItems.push(data);\n    } else {\n      selectedItems.splice(index, 1);\n    }\n    this.setState({ selectedItems });\n  };\n\n  onClearAll = () => {\n    const selectedItems = [];\n    this.setState({ selectedItems });\n  };\n\n  onDone = () => {\n    const { selectedItems, options } = this.state;\n    const { isButton, onChange } = this.props;\n    const selectedValues = selectedItems.map(selectedItem => {\n      return selectedItem.value;\n    });\n    onChange(selectedValues);\n    const sortedOptions = this.__sortOptions(options, selectedItems);\n    let newState = {\n      options: sortedOptions,\n      menuIsOpen: false,\n      showInput: false,\n      showSelectedValues: true,\n      inputValue: ''\n    };\n    newState = isButton ? Object.assign(newState, { showButton: true }) : newState;\n    this.setState({ ...newState });\n  };\n\n  toggleButton = () => {\n    this.setState(prevState => {\n      let updatedState = {\n        showButton: !prevState.showButton,\n        menuIsOpen: !prevState.menuIsOpen,\n        showSelectedValues: !prevState.showSelectedValues\n      };\n      updatedState = (!this.props.isButton) ? { showInput: !prevState.showInput } : updatedState;\n      return updatedState;\n    }\n    );\n    setTimeout(() => {\n      this.props.isButton && this.setState({\n        showInput: !this.state.showInput\n      })\n    }, 0);\n  };\n\n  handleDisplayValue = ({ data }) => {\n    const { selectedItems } = this.state;\n    if (data.value == selectedItems[0].value)\n      return (\n        <div className=\"selectedItem\">{`${data.label}${\n          selectedItems.length > 1 ? `+${selectedItems.length - 1}` : ''\n          }`}</div>\n      );\n    return null;\n  };\n\n  optionWithCheckBox = ({ isDisabled, data }) => {\n    const { selectedItems } = this.state;\n    return !isDisabled ? (\n      <div\n        onClick={() => this.onCheckboxClick(data)}\n        className=\"checkboxWrapper\"\n      >\n        <CheckBox checked={selectedItems.indexOf(data) > -1} />\n        <span className=\"dataLabel\">{data.label}</span>\n      </div>\n    ) : null;\n  };\n\n  buildMenu = props => {\n    const { selectedItems } = this.state;\n    return (\n      <components.Menu {...props}>\n        {props.children}\n        <div className=\"componentWrapper\">\n          <div className=\"buttonWrapperL\">\n            <Button type=\"text\" onClick={this.onClearAll}>\n              {'Clear All'}\n            </Button>\n          </div>\n          <div className=\"buttonWrapperR\">\n            <Button type=\"text\" onClick={this.onDone}>\n              <span className=\"marginR5\"> Done</span>{`${selectedItems.length ? `(${selectedItems.length})` : ''}`}\n            </Button>\n          </div>\n        </div>\n      </components.Menu>\n    );\n  };\n\n  handleControl = arg => {\n    return (\n      <div className=\"selectBoxWrapper\">\n        <div\n          className={this.state.showInput ? 'activeSearch' : ''}\n          onClick={() => {\n            this.setState({\n              menuIsOpen: true,\n              showInput: true,\n              showSelectedValues: false\n            });\n          }}\n        >\n          <components.Control {...arg} />\n        </div>\n      </div>\n    );\n  };\n\n  handleInput = props => {\n    if (props.isHidden) {\n      return <components.Input {...props} />;\n    }\n    return (\n      <div className={props.value.length ? 'activeInput' : ''}>\n        <components.Input {...props} />\n        <Icon type=\"Cancel\" onClick={() => this.setState({ inputValue: '' })} />\n      </div>\n    );\n  };\n\n  onInputChange = (input, event) => {\n    if (event.action == 'input-change') this.setState({ inputValue: input });\n  };\n\n  getButtonText = () => {\n    const { selectedItems } = this.state;\n    const { buttonLabel } = this.props;\n    const selectedItemsLength = selectedItems.length;\n    if (selectedItemsLength) {\n      if (selectedItemsLength == 1) return `${selectedItems[0].label}`;\n      return `${buttonLabel}.${selectedItems.length}`;\n    }\n    return buttonLabel;\n  };\n\n  render() {\n    const { isMulti } = this.props;\n    const {\n      options,\n      selectedItems,\n      showSelectedValues,\n      menuIsOpen,\n      showButton,\n      showInput,\n      inputValue\n    } = this.state;\n    const selectProps = isMulti\n      ? {\n        onChange: this.onCheckboxClick,\n        hideSelectedOptions: false,\n        components: {\n          Option: this.optionWithCheckBox,\n          MultiValueContainer: this.handleDisplayValue,\n          Menu: this.buildMenu,\n          Control: this.handleControl,\n          Input: this.handleInput\n        },\n        value: selectedItems,\n        closeMenuOnSelect: false,\n        controlShouldRenderValue: showSelectedValues,\n        menuIsOpen: menuIsOpen,\n        isSearchable: showInput,\n        autoFocus: showInput,\n        onBlur: this.onDone,\n        inputValue: inputValue,\n        onInputChange: this.onInputChange\n      }\n      : {\n        components: {\n          Control: this.handleControl,\n          Input: this.handleInput\n        },\n        onChange: value => {\n          this.setState({ showInput: false });\n          this.props.onChange(value);\n        },\n        onBlur: () => this.setState({ showInput: false }),\n        backspaceRemovesValue: false\n      };\n\n    if (showButton) {\n      return (\n        <Button onClick={this.toggleButton} type=\"primary\">\n          {this.getButtonText()}\n        </Button>\n      );\n    }\n    return (\n      <Select\n        {...this.props}\n        options={options}\n        classNamePrefix={'mt-react-select'}\n        {...selectProps}\n      />\n    );\n  }\n}\n"]}