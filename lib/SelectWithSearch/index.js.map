<<<<<<< HEAD
{"version":3,"sources":["../../src/SelectWithSearch/index.js"],"names":["SelectWithSearch","async","props","Component","propTypes","options","PropTypes","arrayOf","object","bool"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;IAEMA,gB;;;;;;;;;;6BAKK;AAAA,UACDC,KADC,GACS,KAAKC,KADd,CACDD,KADC;;AAEP,UAAIA,KAAJ,EAAW;AACT,eAAO,8BAAC,eAAD,EAAiB,KAAKC,KAAtB,CAAP;AACD;AACD,aAAO,8BAAC,qBAAD,EAAY,KAAKA,KAAjB,CAAP;AACD;;;EAX4BC,gB;;AAAzBH,gB,CACGI,S,GAAY;AACjBC,WAASC,oBAAUC,OAAV,CAAkBD,oBAAUE,MAA5B,CADQ;AAEjBP,SAAOK,oBAAUG;AAFA,C;kBAaNT,gB","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Select from 'react-select';\nimport AsyncSelect from 'react-select/lib/Async';\nimport './index.scss';\n\nclass SelectWithSearch extends Component {\n  static propTypes = {\n    options: PropTypes.arrayOf(PropTypes.object),\n    async: PropTypes.bool\n  };\n  render() {\n    let { async } = this.props;\n    if (async) {\n      return <AsyncSelect {...this.props} />;\n    }\n    return <Select {...this.props} />;\n  }\n}\n\nexport default SelectWithSearch;\n"]}
=======
{"version":3,"sources":["../../src/SelectWithSearch/index.js"],"names":["initialCache","options","hasMore","isLoading","AsyncSelect","props","onInputChange","setState","search","optionsCache","state","loadOptions","onMenuScrollToBottom","currentOptions","__loadOptions","prevOptions","promiseOption","pageSize","offset","length","then","resolve","onMenuOpen","initialOptionsCache","oldProps","cacheUniq","prevState","concat","Component","propTypes","PropTypes","func","any","number","array","defaultProps","SelectWithSearch","async","arrayOf","object","bool"],"mappings":"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AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAnPMQ,gB,CACGP,S,GAAY;AACjB5B,WAAS6B,oBAAUQ,OAAV,CAAkBR,oBAAUS,MAA5B,CADQ;AAEjBF,SAAOP,oBAAUU;AAFA,C;kBAoPNJ,gB","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n//import Button from '../Button';\nimport Select from 'react-select';\n//import AsyncSelect from \"react-select/lib/Async\";\n//import { Icon } from 'antd';\n\nconst initialCache = {\n  options: [],\n  hasMore: true,\n  isLoading: false\n};\n\nclass AsyncSelect extends Component {\n  static propTypes = {\n    promiseOption: PropTypes.func,\n    cacheUniq: PropTypes.any,\n    pageSize: PropTypes.number,\n    options: PropTypes.array\n  };\n\n  static defaultProps = {\n    cacheUniq: null,\n    pageSize: 10\n  };\n\n  constructor(props) {\n    super(props);\n    const initialOptionsCache = props.options\n      ? {\n          '': {\n            isLoading: false,\n            options: props.options || [],\n            hasMore: true\n          }\n        }\n      : {};\n    this.state = {\n      search: '',\n      optionsCache: initialOptionsCache\n    };\n  }\n\n  componentDidUpdate(oldProps) {\n    const { cacheUniq } = this.props;\n\n    if (oldProps.cacheUniq !== cacheUniq) {\n      this.setState({\n        optionsCache: {}\n      });\n    }\n  }\n\n  onInputChange = search => {\n    this.setState({\n      search\n    });\n\n    const { optionsCache } = this.state;\n\n    if (!optionsCache[search]) {\n      this.loadOptions();\n    }\n  };\n\n  onMenuScrollToBottom = async () => {\n    const { search, optionsCache } = this.state;\n\n    const currentOptions = optionsCache[search];\n\n    if (currentOptions) {\n      await this.loadOptions();\n    }\n  };\n\n  async loadOptions() {\n    const { search, optionsCache } = this.state;\n\n    const currentOptions = optionsCache[search] || initialCache;\n\n    if (currentOptions.isLoading || !currentOptions.hasMore) {\n      return;\n    }\n\n    await this.setState(prevState => ({\n      search,\n      optionsCache: {\n        ...prevState.optionsCache,\n        [search]: {\n          ...currentOptions,\n          isLoading: true\n        }\n      }\n    }));\n\n    try {\n      const loadOptions = this.__loadOptions;\n\n      const { options, hasMore } = await loadOptions(\n        search,\n        currentOptions.options\n      );\n\n      await this.setState(prevState => ({\n        optionsCache: {\n          ...prevState.optionsCache,\n          [search]: {\n            ...currentOptions,\n            options: currentOptions.options.concat(options),\n            hasMore: !!hasMore,\n            isLoading: false\n          }\n        }\n      }));\n    } catch (e) {\n      await this.setState(prevState => ({\n        optionsCache: {\n          ...prevState.optionsCache,\n          [search]: {\n            ...currentOptions,\n            isLoading: false\n          }\n        }\n      }));\n    }\n  }\n\n  __loadOptions = (search, prevOptions) => {\n    let { promiseOption, pageSize } = this.props;\n    return new Promise(resolve => {\n      let offset = prevOptions.length;\n      promiseOption({ search, offset, pageSize }).then(options => {\n        resolve({ options, hasMore: options.length === pageSize });\n      }, {});\n    });\n  };\n\n  onMenuOpen = async () => {\n    const { optionsCache } = this.state;\n\n    if (!optionsCache['']) {\n      await this.loadOptions();\n    }\n  };\n\n  render() {\n    const { search, optionsCache } = this.state;\n    const currentOptions = optionsCache[search] || initialCache;\n    return (\n      <div>\n        <Select\n          {...this.props}\n          onInputChange={this.onInputChange}\n          isLoading={currentOptions.isLoading}\n          options={currentOptions.options}\n          onMenuOpen={this.onMenuOpen}\n          autoload={false}\n          onMenuScrollToBottom={this.onMenuScrollToBottom}\n        />\n      </div>\n    );\n  }\n}\n\nclass SelectWithSearch extends Component {\n  static propTypes = {\n    options: PropTypes.arrayOf(PropTypes.object),\n    async: PropTypes.bool\n  };\n  render() {\n    let { async } = this.props;\n    if (async) {\n      return <AsyncSelect {...this.props} />;\n    }\n    return <Select {...this.props} />;\n  }\n}\n\n// class SelectWithAsyncSearch extends Component {\n//   static propTypes = {\n//     promiseOption: PropTypes.func,\n//     cacheUniq: PropTypes.any,\n//     options: PropTypes.arrayOf(PropTypes.object),\n//     pageSize: PropTypes.number\n//   };\n\n//   static defaultProps = {\n//     cacheUniq: null,\n//     options: null,\n//     pageSize: 10\n//   };\n\n//   constructor(props) {\n//     super(props);\n\n//     const initialOptionsCache = props.options\n//       ? {\n//           '': {\n//             isLoading: false,\n//             options: props.options,\n//             hasMore: true\n//           }\n//         }\n//       : {};\n\n//     this.state = {\n//       search: '',\n//       optionsCache: initialOptionsCache,\n//       menuIsOpen: false\n//     };\n//   }\n\n//   componentDidUpdate(oldProps) {\n//     const { cacheUniq } = this.props;\n\n//     if (oldProps.cacheUniq !== cacheUniq) {\n//       this.setState({\n//         optionsCache: {}\n//       });\n//     }\n//   }\n\n//   onMenuClose = () => {\n//     this.setState({\n//       search: '',\n//       menuIsOpen: false\n//     });\n//   };\n\n//   onMenuOpen = async () => {\n//     await this.setState({\n//       menuIsOpen: true\n//     });\n\n//     const { optionsCache } = this.state;\n\n//     if (!optionsCache['']) {\n//       await this.loadOptions();\n//     }\n//   };\n\n//   onInputChange = async search => {\n//     await this.setState({\n//       search\n//     });\n\n//     const { optionsCache } = this.state;\n\n//     if (!optionsCache[search]) {\n//       await this.loadOptions();\n//     }\n//   };\n\n//   onMenuScrollToBottom = async () => {\n//     const { search, optionsCache } = this.state;\n\n//     const currentOptions = optionsCache[search];\n\n//     if (currentOptions) {\n//       await this.loadOptions();\n//     }\n//   };\n\n//   async loadOptions() {\n//     const { search, optionsCache } = this.state;\n\n//     const currentOptions = optionsCache[search] || initialCache;\n\n//     if (currentOptions.isLoading || !currentOptions.hasMore) {\n//       return;\n//     }\n\n//     await this.setState(prevState => ({\n//       search,\n//       optionsCache: {\n//         ...prevState.optionsCache,\n//         [search]: {\n//           ...currentOptions,\n//           isLoading: true\n//         }\n//       }\n//     }));\n\n//     try {\n//       const loadOptions = this.__loadOptions;\n\n//       const { options, hasMore } = await loadOptions(\n//         search,\n//         currentOptions.options\n//       );\n\n//       await this.setState(prevState => ({\n//         optionsCache: {\n//           ...prevState.optionsCache,\n//           [search]: {\n//             ...currentOptions,\n//             options: currentOptions.options.concat(options),\n//             hasMore: !!hasMore,\n//             isLoading: false\n//           }\n//         }\n//       }));\n//     } catch (e) {\n//       await this.setState(prevState => ({\n//         optionsCache: {\n//           ...prevState.optionsCache,\n//           [search]: {\n//             ...currentOptions,\n//             isLoading: false\n//           }\n//         }\n//       }));\n//     }\n//   }\n\n//   __loadOptions = (search, prevOptions) => {\n//     let { promiseOption, pageSize } = this.props;\n//     return new Promise(resolve => {\n//       let offset = prevOptions.length;\n//       promiseOption({ search, offset, pageSize }).then(options => {\n//         resolve({ options, hasMore: options.length === pageSize });\n//       }, {});\n//     });\n//   };\n\n//   render() {\n//     const { search, optionsCache, menuIsOpen } = this.state;\n\n//     const currentOptions = optionsCache[search] || initialCache;\n\n//     return (\n//       <SelectBase\n//         {...this.props}\n//         arrowRenderer={() => null}\n//         classNamePrefix=\"react-select-container\"\n//         inputValue={search}\n//         menuIsOpen={menuIsOpen}\n//         onMenuClose={this.onMenuClose}\n//         onMenuOpen={this.onMenuOpen}\n//         onInputChange={this.onInputChange}\n//         onMenuScrollToBottom={this.onMenuScrollToBottom}\n//         isLoading={currentOptions.isLoading}\n//         options={currentOptions.options}\n//       />\n//     );\n//   }\n// }\n\n// class SelectWithSearch extends Component {\n//   static propTypes = {\n//     promiseOption: PropTypes.func,\n//     async: PropTypes.bool,\n//     cacheUniq: PropTypes.any,\n//     selectedOption: PropTypes.object,\n//     options: PropTypes.arrayOf(PropTypes.object),\n//     placeholder: PropTypes.string,\n//     pageSize: PropTypes.number,\n//     style: PropTypes.object,\n//     onSelect: PropTypes.func\n//   };\n//   static defaultProps = {\n//     style: { width: 200 }\n//   };\n\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       showSelect: false,\n//       selectedOption: props.selectedOption\n//     };\n//   }\n\n//   handleChange = selectedOption => {\n//     this.setState({ selectedOption, showSelect: false });\n//     this.props.onSelect(selectedOption.value);\n//   };\n\n//   render() {\n//     let { async, style } = this.props;\n//     let SelectComponent;\n//     if (async) {\n//       SelectComponent = SelectWithAsyncSearch;\n//     } else {\n//       SelectComponent = SelectWithSyncSearch;\n//     }\n//     let { showSelect, selectedOption } = this.state;\n//     let { width } = style;\n//     return (\n//       <div style={style}>\n//         <Button\n//           type=\"default\"\n//           style={{ width }}\n//           onClick={() => {\n//             this.setState({\n//               showSelect: !showSelect\n//             });\n//           }}\n//         >\n//           {selectedOption.label}\n//           <Icon type=\"down\" />\n//         </Button>\n//         {showSelect && (\n//           <SelectComponent {...this.props} onChange={this.handleChange} />\n//         )}\n//       </div>\n//     );\n//   }\n// }\n\nexport default SelectWithSearch;\n"]}
>>>>>>> 8e9c71a8caaa1577aecb4d00b7d88af402f4a65e
