{"version":3,"sources":["../../src/SelectWithSearch/index.js"],"names":["SelectBox","styled","div","searchIcon","theme","colors","OUTER_SPACE","ALTO","width","SILVER","INDIGO","mixin","clearfix","displayIB","SelectWithSearch","async","props","SelectComponent","SyncSelect","AsyncSelect","Component","propTypes","options","PropTypes","arrayOf","object","bool","placeholder","string","isMulti","onChange","func","isRequired","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;;;AAHA;;;;AACA;;;;AAGA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,YAAYC,2BAAOC,GAAnB,kBAaiBC,gBAbjB,EAwBOC,gBAAMC,MAAN,CAAaC,WAxBpB,EA2BkBF,gBAAMC,MAAN,CAAaE,IA3B/B,EA4BO;AAAA,wBAAGC,KAAH;AAAA,MAAGA,KAAH,8BAAW,MAAX;AAAA,SAAwBA,KAAxB;AAAA,CA5BP,EAgCkBJ,gBAAMC,MAAN,CAAaI,MAhC/B,EAmCkBL,gBAAMC,MAAN,CAAaI,MAnC/B,EAwCOL,gBAAMC,MAAN,CAAaC,WAxCpB,EA4CqBF,gBAAMC,MAAN,CAAaK,MA5ClC,EAkDON,gBAAMC,MAAN,CAAaC,WAlDpB,EAqDmBF,gBAAMC,MAAN,CAAaK,MArDhC,EA2FFC,iBAAMC,QAAN,EA3FE,EA2GFD,iBAAME,SAAN,EA3GE,CAAN;;IAmHMC,gB;;;;;;;;;;6BAYK;AAAA,UACDC,KADC,GACS,KAAKC,KADd,CACDD,KADC;;AAEP,UAAIE,kBAAkBC,oBAAtB;AACA,UAAIH,KAAJ,EAAW;AACTE,0BAAkBE,qBAAlB;AACD;AACD,aACE;AAAC,iBAAD;AAAA;AACE,sCAAC,eAAD,EAAqB,KAAKH,KAA1B;AADF,OADF;AAKD;;;EAvB4BI,gB;;AAAzBN,gB,CACGO,S,GAAY;AACjBC,WAASC,oBAAUC,OAAV,CAAkBD,oBAAUE,MAA5B,CADQ;AAEjBV,SAAOQ,oBAAUG,IAFA;AAGjBC,eAAaJ,oBAAUK,MAHN;AAIjBC,WAASN,oBAAUG,IAJF;AAKjBI,YAAUP,oBAAUQ,IAAV,CAAeC;AALR,C;AADflB,gB,CAQGmB,Y,GAAe;AACpBN,eAAa;AADO,C;kBAkBTb,gB","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n//import AsyncSelect from \"react-select/lib/Async\";\n//import { Icon } from 'antd';\nimport styled from 'styled-components';\nimport theme from '../styles/theme';\nimport AsyncSelect from './asyncSelect';\nimport SyncSelect from './syncSelect';\nimport mixin from '../styles/mixins';\nimport searchIcon from './assets/search.svg';\n\nconst SelectBox = styled.div`\n  .mt-react-select__single-value {\n    padding-left: 30px;\n    position: absolute;\n    top: 50%;\n    -webkit-transform: translateY(-50%);\n    -ms-transform: translateY(-50%);\n    transform: translateY(-50%);\n  }\n  \n  .mt-react-select__value-container{\n    &:before {\n    content: '';\n    background: url('${searchIcon}') no-repeat 10px 5px;\n    height: 25px;\n    width: 30px;\n    padding-left: 5px;\n    padding-top: 5px;\n    position: absolute;\n    opacity: 0.6;\n  }\n  }\n  .mt-react-select__menu-list {\n    padding: 8px;\n    color: ${theme.colors.OUTER_SPACE};   \n  }\n  .mt-react-select__control {\n    border: 1px solid ${theme.colors.ALTO};\n    width: ${({ width = 'auto' }) => width};\n  }\n  .mt-react-select__control--is-focused {\n    box-shadow: none;\n    border: 1px solid ${theme.colors.SILVER};\n  }\n  .mt-react-select__control--is-focused:hover {\n    border: 1px solid ${theme.colors.SILVER};\n  }\n  .mt-react-select__option {\n    border-radius: 4px;\n    padding: 6px 20px 8px 16px;\n    color: ${theme.colors.OUTER_SPACE};\n    height: 32px;\n  }\n  // .mt-react-select__option:hover{\n  //   background-color: ${theme.colors.INDIGO};\n  //   color: #ffffff;\n  //   cursor: pointer;\n  // }\n  .mt-react-select__option--is-selected {\n    background-color: #ffffff;\n    color: ${theme.colors.OUTER_SPACE};\n  }\n  .mt-react-select__option--is-focused {\n    background-color:  ${theme.colors.INDIGO};\n    color: #ffffff;\n    cursor: pointer;\n  }\n  .mt-react-select__input {\n    padding-left: 30px;\n  }\n  .mt-react-select__placeholder {\n    padding-left: 30px;\n  }\n  .mt-react-select__indicators {\n    display: none;\n  }\n\n  .ant-checkbox-wrapper .ant-checkbox {\n    vertical-align: middle;\n    margin-right: 8px;\n  }\n\n  .mt-react-select__menu-list--is-multi {\n    padding: 19px 24px;  \n  }\n\n  .ant-btn-text {\n    padding: 0px 24px;\n  }\n\n  .selectedItem {\n    margin-left: 2px;\n    margin-right: 2px;\n    padding-left: 30px;\n    position: absolute;\n    top: 50%;\n    -webkit-transform: translateY(-50%);\n    -ms-transform: translateY(-50%);\n    transform: translateY(-50%);\n  }\n.componentWrapper {\n  ${mixin.clearfix()};\n}\n\n.buttonWrapperL {\n  float: left;\n  padding-bottom: 15px;\n  padding-top: 15px;\n}\n\n.buttonWrapperR {\n  float: right;\n  padding-bottom: 15px;\n  padding-top: 15px;\n}\n\n.dataLabel {\n  ${mixin.displayIB()};\n}\n\n.checkboxWrapper {\n  margin-bottom: 5px;\n}\n`;\n\nclass SelectWithSearch extends Component {\n  static propTypes = {\n    options: PropTypes.arrayOf(PropTypes.object),\n    async: PropTypes.bool,\n    placeholder: PropTypes.string,\n    isMulti: PropTypes.bool,\n    onChange: PropTypes.func.isRequired\n  };\n  static defaultProps = {\n    placeholder: 'Type here to Search'\n  };\n\n  render() {\n    let { async } = this.props;\n    let SelectComponent = SyncSelect;\n    if (async) {\n      SelectComponent = AsyncSelect;\n    }\n    return (\n      <SelectBox>\n        <SelectComponent {...this.props} />\n      </SelectBox>\n    );\n  }\n}\n\nexport default SelectWithSearch;\n"]}