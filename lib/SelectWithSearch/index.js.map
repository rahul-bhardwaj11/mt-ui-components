{"version":3,"sources":["../../src/SelectWithSearch/index.js"],"names":["SelectBox","div","colors","OUTER_SPACE","ALTO","width","SILVER","INDIGO","clearfix","displayIB","SelectWithSearch","props","async","isButton","SelectComponent","className","buttonSelect","propTypes","options","arrayOf","object","bool","placeholder","string","isMulti","onChange","func","isRequired","buttonMaxWidth","number","buttonWidth","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;;;AAHA;;;;AACA;;;;AAGA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,YAAY,2BAAOC,GAAnB,kBA6CO,gBAAMC,MAAN,CAAaC,WA7CpB,oBAyEkB,gBAAMD,MAAN,CAAaE,IAzE/B,EA0EO;AAAA,wBAAGC,KAAH;AAAA,MAAGA,KAAH,8BAAW,MAAX;AAAA,SAAwBA,KAAxB;AAAA,CA1EP,EA8EkB,gBAAMH,MAAN,CAAaI,MA9E/B,EAiFkB,gBAAMJ,MAAN,CAAaI,MAjF/B,EAsFO,gBAAMJ,MAAN,CAAaC,WAtFpB,EA0FqB,gBAAMD,MAAN,CAAaK,MA1FlC,EAgGO,gBAAML,MAAN,CAAaC,WAhGpB,EAmGmB,gBAAMD,MAAN,CAAaK,MAnGhC,EAyIF,iBAAMC,QAAN,EAzIE,EAyJF,iBAAMC,SAAN,EAzJE,CAAN;;IAuLMC,gB;;;;;;;;;;6BAeK;AAAA,mBACmB,KAAKC,KADxB;AAAA,UACDC,KADC,UACDA,KADC;AAAA,UACMC,QADN,UACMA,QADN;;AAEP,UAAIC,sCAAJ;AACA,UAAIF,KAAJ,EAAW;AACTE;AACD;AACD,UAAIC,YAAY,0BAAW;AACzBC,sBAAcH;AADW,OAAX,CAAhB;AAGA,aACE;AAAC,iBAAD;AAAA,UAAW,WAAWE,SAAtB;AACE,sCAAC,eAAD,EAAqB,KAAKJ,KAA1B;AADF,OADF;AAKD;;;;;AA7BGD,gB,CACGO,S,GAAY;AACjBC,WAAS,oBAAUC,OAAV,CAAkB,oBAAUC,MAA5B,CADQ;AAEjBR,SAAO,oBAAUS,IAFA;AAGjBC,eAAa,oBAAUC,MAHN;AAIjBC,WAAS,oBAAUH,IAJF;AAKjBI,YAAU,oBAAUC,IAAV,CAAeC,UALR;AAMjBd,YAAU,oBAAUQ,IANH;AAOjBO,kBAAgB,oBAAUC,MAPT;AAQjBC,eAAa,oBAAUD;AARN,C;AADfnB,gB,CAWGqB,Y,GAAe;AACpBT,eAAa;AADO,C;kBAqBTZ,gB","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n//import AsyncSelect from \"react-select/lib/Async\";\n//import { Icon } from 'antd';\nimport styled from 'styled-components';\nimport theme from '../styles/theme';\nimport AsyncSelect from './asyncSelect';\nimport SyncSelect from './syncSelect';\nimport mixin from '../styles/mixins';\nimport searchIcon from './assets/search.svg';\nimport classnames from 'classnames';\n\nconst SelectBox = styled.div`\n  //  width: 0;\n  //  transition: width 2s;\n  //  &.active {\n  //    width: 100%;\n  //  }\n  &.buttonSelect {\n    .mt-react-select__control {\n      width: 0;\n      opacity: 0;\n      transition: width .85s, opacity 1s;\n    }\n\n    .activeSearch {\n      .mt-react-select__control {\n        width: 100%;\n        opacity: 1;\n\n      }\n    }\n  }\n  .mt-react-select__single-value {\n    padding-left: 0px;\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n\n  .mt-react-select__value-container{\n    padding-left: 12px;\n    &:before {\n    content: '';\n    display: none;\n    height: 22px;\n    width: 24px;\n    background-size: 14px;\n    padding-left: 5px;\n    padding-top: 5px;\n    left: 0;\n    position: absolute;\n    opacity: 0.6;\n  }\n  }\n  .mt-react-select__menu-list {\n    padding: 8px;\n    color: ${theme.colors.OUTER_SPACE};\n  }\n\n  .selectBoxWrapper{\n    height: 32px;\n   .activeSearch {\n    .mt-react-select__value-container{\n      &:before {\n          display: block;\n          background: url('${searchIcon}') no-repeat 10px 5px;\n        }\n      }\n      .mt-react-select__single-value {\n        padding-left: 20px;\n      }\n      .mt-react-select__dropdown-indicator {\n        display: none;\n      }\n      .mt-react-select__placeholder {\n        padding-left: 20px;\n      }\n  }\n}\n\n  .mt-react-select__clear-indicator{\n    display: none;\n  }\n  .mt-react-select__control {\n    border: 1px solid ${theme.colors.ALTO};\n    width: ${({ width = 'auto' }) => width};\n  }\n  .mt-react-select__control--is-focused {\n    box-shadow: none;\n    border: 1px solid ${theme.colors.SILVER};\n  }\n  .mt-react-select__control--is-focused:hover {\n    border: 1px solid ${theme.colors.SILVER};\n  }\n  .mt-react-select__option {\n    border-radius: 4px;\n    padding: 6px 20px 8px 16px;\n    color: ${theme.colors.OUTER_SPACE};\n    height: 32px;\n  }\n  // .mt-react-select__option:hover{\n  //   background-color: ${theme.colors.INDIGO};\n  //   color: #ffffff;\n  //   cursor: pointer;\n  // }\n  .mt-react-select__option--is-selected {\n    background-color: #ffffff;\n    color: ${theme.colors.OUTER_SPACE};\n  }\n  .mt-react-select__option--is-focused {\n    background-color:  ${theme.colors.INDIGO};\n    color: #ffffff;\n    cursor: pointer;\n  }\n  .mt-react-select__indicator-separator {\n    display: none;\n  }\n  .mt-react-select__input {\n    padding-left: 20px;\n  }\n  .mt-react-select__placeholder {\n    //padding-left: 20px;\n  }\n\n  .ant-checkbox-wrapper .ant-checkbox {\n    vertical-align: middle;\n    margin-right: 8px;\n  }\n\n  .mt-react-select__menu-list--is-multi {\n    padding: 19px 24px;\n  }\n\n  .ant-btn-text {\n    padding: 0px 24px;\n  }\n\n  .selectedItem {\n    margin-left: 2px;\n    margin-right: 2px;\n    //padding-left: 30px;\n    position: absolute;\n    top: 50%;\n    -webkit-transform: translateY(-50%);\n    -ms-transform: translateY(-50%);\n    transform: translateY(-50%);\n  }\n.componentWrapper {\n  ${mixin.clearfix()};\n  width: 100%;\n}\n\n.buttonWrapperL {\n  float: left;\n  width: 50%;\n  padding-bottom: 10px;\n}\n\n.buttonWrapperR {\n  float: right;\n  padding-bottom: 10px;\n}\n\n.dataLabel {\n  ${mixin.displayIB()};\n}\n\n.icon-Cancel {\n  display: none;\n}\n\n.activeInput {\n  .icon-Cancel {\n    display: inline-block;\n    position: absolute;\n    right: 10px;\n    bottom: 10px;\n    cursor: pointer;\n  }\n}\n\n.mt-react-select__value-container:before {\n  height: 22px;\n  width: 26px;\n}\n\n.checkboxWrapper {\n  margin-bottom: 5px;\n}\n.doneMarginR {\n  margin-left: 5px;\n}\n`;\n\nclass SelectWithSearch extends Component {\n  static propTypes = {\n    options: PropTypes.arrayOf(PropTypes.object),\n    async: PropTypes.bool,\n    placeholder: PropTypes.string,\n    isMulti: PropTypes.bool,\n    onChange: PropTypes.func.isRequired,\n    isButton: PropTypes.bool,\n    buttonMaxWidth: PropTypes.number,\n    buttonWidth: PropTypes.number\n  };\n  static defaultProps = {\n    placeholder: 'Type here to Search'\n  };\n\n  render() {\n    let { async, isButton } = this.props;\n    let SelectComponent = SyncSelect;\n    if (async) {\n      SelectComponent = AsyncSelect;\n    }\n    let className = classnames({\n      buttonSelect: isButton\n    });\n    return (\n      <SelectBox className={className}>\n        <SelectComponent {...this.props} />\n      </SelectBox>\n    );\n  }\n}\n\nexport default SelectWithSearch;\n"]}