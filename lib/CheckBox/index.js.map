{"version":3,"sources":["../../src/CheckBox/index.js"],"names":["noop","undefined","MtCheckbox","div","colors","INDIGO","DARK","OUTER_SPACE","CheckBox","state","checked","props","onChange","event","stopPropagation","isChecked","setState","nextProps","label","indeterminate","propTypes","string","bool","onClick","func","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AAEA;;;;AACA;;AACA;;;;AACA;;;;;;AAEA,IAAMA,OAAO,SAAPA,IAAO;AAAA,SAAMC,SAAN;AAAA,CAAb;;AAEA,IAAMC,aAAa,2BAAOC,GAApB,kBAMsB,gBAAMC,MAAN,CAAaC,MANnC,EAOkB,gBAAMD,MAAN,CAAaC,MAP/B,EA0CsB,gBAAMD,MAAN,CAAaC,MA1CnC,EA2CkB,gBAAMD,MAAN,CAAaC,MA3C/B,EA+CS,gBAAMD,MAAN,CAAaE,IA/CtB,EAkDS,gBAAMF,MAAN,CAAaG,WAlDtB,CAAN;;IAuDMC,Q;;;;;;;;;;;;;;gNAaJC,K,GAAQ;AACNC,eAAS,MAAKC,KAAL,CAAWD;AADd,K,QAIRE,Q,GAAW,iBAAS;AAClBC,YAAMC,eAAN;AACA,UAAMC,YAAY,CAAC,MAAKN,KAAL,CAAWC,OAA9B;AACA,YAAKM,QAAL,CAAc,EAAEN,SAASK,SAAX,EAAd;AACA,YAAKJ,KAAL,CAAWC,QAAX,CAAoBG,SAApB;AACD,K;;;;;8CAEyBE,S,EAAW;AAAA,UAC7BP,OAD6B,GACjB,KAAKD,KADY,CAC7BC,OAD6B;;AAEnC,UAAIA,YAAYO,UAAUP,OAA1B,EAAmC;AACjC,aAAKM,QAAL,CAAc,EAAEN,SAASO,UAAUP,OAArB,EAAd;AACD;AACF;;;6BAEQ;AAAA,mBAC0B,KAAKC,KAD/B;AAAA,UACCO,KADD,UACCA,KADD;AAAA,UACQC,aADR,UACQA,aADR;;AAEP,aACE;AAAC,kBAAD;AAAA;AACE;AAAA;AAAA;AACE,qBAAS,KAAKV,KAAL,CAAWC,OADtB;AAEE,sBAAU,KAAKE,QAFjB;AAGE,2BAAeO;AAHjB;AAKGD;AALH;AADF,OADF;AAWD;;;;;AA5CGV,Q,CACGY,S,GAAY;AACjBF,SAAO,oBAAUG,MADA;AAEjBX,WAAS,oBAAUY,IAFF;AAGjBC,WAAS,oBAAUC,IAHF;AAIjBZ,YAAU,oBAAUY,IAJH;AAKjBL,iBAAe,oBAAUG;AALR,C;AADfd,Q,CASGiB,Y,GAAe;AACpBb,YAAUZ;AADU,C;kBAqCTQ,Q","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport AntCheckbox from 'antd/lib/checkbox';\nimport 'antd/lib/checkbox/style/index.css';\nimport styled from 'styled-components';\nimport theme from '../styles/theme';\n\nconst noop = () => undefined;\n\nconst MtCheckbox = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n  .ant-checkbox-wrapper {\n    .ant-checkbox-indeterminate {\n      .ant-checkbox-inner {\n        background-color: ${theme.colors.INDIGO};\n        border-color: ${theme.colors.INDIGO};\n        &:after {\n          transform: rotate(180deg) scale(1);\n          left: 1.5px;\n          top: 4.5px;\n          width: 8px;\n          height: 2px;\n        }\n      }\n    }\n  }\n  .ant-checkbox-wrapper {\n    font-weight: normal;\n    display: inherit;\n    .ant-checkbox {\n      display: inline-block;\n      vertical-align: middle;\n    }\n    .ant-checkbox + span {\n      display: inline-block;\n      vertical-align: top;\n      min-width: 125px;\n      font-size: 14px;\n    }\n    .ant-checkbox-inner {\n      width: 14px;\n      height: 14px;\n      border-radius: 3px;\n      &:after {\n        left: 3.5px;\n        top: 1.2px;\n      }\n    }\n    .ant-checkbox-checked {\n      & > .ant-checkbox-inner {\n        background-color: ${theme.colors.INDIGO};\n        border-color: ${theme.colors.INDIGO};\n      }\n    }\n    .ant-checkbox-checked + span {\n      color: ${theme.colors.DARK};\n    }\n    span {\n      color: ${theme.colors.OUTER_SPACE};\n    }\n  }\n`;\n\nclass CheckBox extends Component {\n  static propTypes = {\n    label: PropTypes.string,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func,\n    onChange: PropTypes.func,\n    indeterminate: PropTypes.bool\n  };\n\n  static defaultProps = {\n    onChange: noop\n  };\n\n  state = {\n    checked: this.props.checked\n  };\n\n  onChange = event => {\n    event.stopPropagation();\n    const isChecked = !this.state.checked;\n    this.setState({ checked: isChecked });\n    this.props.onChange(isChecked);\n  };\n\n  componentWillReceiveProps(nextProps) {\n    let { checked } = this.state;\n    if (checked !== nextProps.checked) {\n      this.setState({ checked: nextProps.checked });\n    }\n  }\n\n  render() {\n    const { label, indeterminate } = this.props;\n    return (\n      <MtCheckbox>\n        <AntCheckbox\n          checked={this.state.checked}\n          onChange={this.onChange}\n          indeterminate={indeterminate}\n        >\n          {label}\n        </AntCheckbox>\n      </MtCheckbox>\n    );\n  }\n}\nexport default CheckBox;\n"]}